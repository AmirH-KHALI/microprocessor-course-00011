
AVRASM ver. 2.1.30  E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm Sun Jan 23 04:04:46 2022

E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm(1088): warning: Register r4 already defined by the .DEF directive
E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm(1089): warning: Register r5 already defined by the .DEF directive
E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm(1090): warning: Register r6 already defined by the .DEF directive
E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm(1091): warning: Register r7 already defined by the .DEF directive
E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm(1092): warning: Register r9 already defined by the .DEF directive
E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm(1093): warning: Register r8 already defined by the .DEF directive
E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm(1094): warning: Register r11 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _operation_enter=R4
                 	.DEF _operation_enter_msb=R5
                 	.DEF _equal_enter=R6
                 	.DEF _equal_enter_msb=R7
                 	.DEF __lcd_x=R9
                 	.DEF __lcd_y=R8
                 	.DEF __lcd_maxx=R11
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004e 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00002a 0000
00002b 0001      	.DB  0x0,0x0,0x1,0x0
                 
                 _0xB:
00002c 0000
00002d 0000
00002e 0000
00002f 3f80      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x80,0x3F
                 _0xC:
000030 2a2b      	.DB  0x2B,0x2A
                 _0x0:
000031 2e25
000032 6632
E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm(1134): warning: .cseg .db misalignment - padding zero byte
000033 0000      	.DB  0x25,0x2E,0x32,0x66,0x0
                 _0x2000003:
000034 c080      	.DB  0x80,0xC0
                 _0x2020060:
E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm(1138): warning: .cseg .db misalignment - padding zero byte
000035 0001      	.DB  0x1
                 _0x2020000:
000036 4e2d
000037 4e41
000038 4900
000039 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm(1141): warning: .cseg .db misalignment - padding zero byte
00003a 0000      	.DB  0x0
                 _0x2040000:
00003b 4e2d
00003c 4e41
E:\desk\University\00011-MP (Rizpar)\HW6\q2\Debug\List\program.asm(1143): warning: .cseg .db misalignment - padding zero byte
00003d 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
00003e 0004      	.DW  0x04
00003f 0004      	.DW  0x04
000040 0054      	.DW  __REG_VARS*2
                 
000041 0008      	.DW  0x08
000042 0260      	.DW  _number
000043 0058      	.DW  _0xB*2
                 
000044 0002      	.DW  0x02
000045 026c      	.DW  _operation
000046 0060      	.DW  _0xC*2
                 
000047 0002      	.DW  0x02
000048 028e      	.DW  __base_y_G100
000049 0068      	.DW  _0x2000003*2
                 
00004a 0001      	.DW  0x01
00004b 0292      	.DW  __seed_G101
00004c 006a      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00004d 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004e 94f8      	CLI
00004f 27ee      	CLR  R30
000050 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000051 e0f1      	LDI  R31,1
000052 bffb      	OUT  GICR,R31
000053 bfeb      	OUT  GICR,R30
000054 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000055 e08d      	LDI  R24,(14-2)+1
000056 e0a2      	LDI  R26,2
000057 27bb      	CLR  R27
                 __CLEAR_REG:
000058 93ed      	ST   X+,R30
000059 958a      	DEC  R24
00005a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005c e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005d e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005e 93ed      	ST   X+,R30
00005f 9701      	SBIW R24,1
000060 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000061 e7ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000062 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000063 9185      	LPM  R24,Z+
000064 9195      	LPM  R25,Z+
000065 9700      	SBIW R24,0
000066 f061      	BREQ __GLOBAL_INI_END
000067 91a5      	LPM  R26,Z+
000068 91b5      	LPM  R27,Z+
000069 9005      	LPM  R0,Z+
00006a 9015      	LPM  R1,Z+
00006b 01bf      	MOVW R22,R30
00006c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006d 9005      	LPM  R0,Z+
00006e 920d      	ST   X+,R0
00006f 9701      	SBIW R24,1
000070 f7e1      	BRNE __GLOBAL_INI_LOOP
000071 01fb      	MOVW R30,R22
000072 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000073 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000074 bfed      	OUT  SPL,R30
000075 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000076 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000077 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000078 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000079 940c 00b2 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;
                 ;#define KEYPAD_R1 PORTD.0
                 ;#define KEYPAD_R2 PORTD.1
                 ;#define KEYPAD_R3 PORTD.2
                 ;#define KEYPAD_R4 PORTD.3
                 ;#define KEYPAD_C1 PIND.4
                 ;#define KEYPAD_C2 PIND.5
                 ;#define KEYPAD_C3 PIND.6
                 ;#define KEYPAD_C4 PIND.7
                 ;
                 ;#define KEYPAD_NUM0 '0'
                 ;#define KEYPAD_NUM1 '1'
                 ;#define KEYPAD_NUM2 '2'
                 ;#define KEYPAD_NUM3 '3'
                 ;#define KEYPAD_NUM4 '4'
                 ;#define KEYPAD_NUM5 '5'
                 ;#define KEYPAD_NUM6 '6'
                 ;#define KEYPAD_NUM7 '7'
                 ;#define KEYPAD_NUM8 '8'
                 ;#define KEYPAD_NUM9 '9'
                 ;
                 ;#define KEYPAD_DIVISION '/'
                 ;#define KEYPAD_ADDITION '+'
                 ;#define KEYPAD_MINUS '-'
                 ;#define KEYPAD_MULTIPLICATION '*'
                 ;#define KEYPAD_EQUAL '='
                 ;#define KEYPAD_AC 'C'
                 ;
                 ;unsigned char keypad_scan();
                 ;
                 ;float calculate(float num1, float num2, unsigned char operation) {
                 ; 0000 0024 float calculate(float num1, float num2, unsigned char operation) {
                 
                 	.CSEG
                 _calculate:
                 ; .FSTART _calculate
                 ; 0000 0025     float result;
                 ; 0000 0026     switch (operation)
00007b 93aa      	ST   -Y,R26
00007c 9724      	SBIW R28,4
                 ;	num1 -> Y+9
                 ;	num2 -> Y+5
                 ;	operation -> Y+4
                 ;	result -> Y+0
00007d 81ec      	LDD  R30,Y+4
00007e e0f0      	LDI  R31,0
                 ; 0000 0027         {
                 ; 0000 0028             case KEYPAD_ADDITION:
00007f 32eb      	CPI  R30,LOW(0x2B)
000080 e0a0      	LDI  R26,HIGH(0x2B)
000081 07fa      	CPC  R31,R26
000082 f439      	BRNE _0x6
                 ; 0000 0029                 result = num1 + num2;
000083 940e 06e0 	CALL SUBOPT_0x0
000085 940e 0912 	CALL __ADDF12
000087 940e 06e9 	CALL SUBOPT_0x1
                 ; 0000 002A                 break;
000089 c024      	RJMP _0x5
                 ; 0000 002B             case KEYPAD_MULTIPLICATION:
                 _0x6:
00008a 32ea      	CPI  R30,LOW(0x2A)
00008b e0a0      	LDI  R26,HIGH(0x2A)
00008c 07fa      	CPC  R31,R26
00008d f439      	BRNE _0x7
                 ; 0000 002C                 result = num1 * num2;
00008e 940e 06e0 	CALL SUBOPT_0x0
000090 940e 0962 	CALL __MULF12
000092 940e 06e9 	CALL SUBOPT_0x1
                 ; 0000 002D                 break;
000094 c019      	RJMP _0x5
                 ; 0000 002E             case KEYPAD_DIVISION:
                 _0x7:
000095 32ef      	CPI  R30,LOW(0x2F)
000096 e0a0      	LDI  R26,HIGH(0x2F)
000097 07fa      	CPC  R31,R26
000098 f439      	BRNE _0x8
                 ; 0000 002F                 result = num1 / num2;
000099 940e 06e0 	CALL SUBOPT_0x0
00009b 940e 09b0 	CALL __DIVF21
00009d 940e 06e9 	CALL SUBOPT_0x1
                 ; 0000 0030                 break;
00009f c00e      	RJMP _0x5
                 ; 0000 0031             case KEYPAD_MINUS:
                 _0x8:
0000a0 32ed      	CPI  R30,LOW(0x2D)
0000a1 e0a0      	LDI  R26,HIGH(0x2D)
0000a2 07fa      	CPC  R31,R26
0000a3 f451      	BRNE _0xA
                 ; 0000 0032                 result = num1 - num2;
                +
0000a4 81ad     +LDD R26 , Y + 5
0000a5 81be     +LDD R27 , Y + 5 + 1
0000a6 818f     +LDD R24 , Y + 5 + 2
0000a7 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
0000a8 940e 06ec 	CALL SUBOPT_0x2
0000aa 940e 090b 	CALL __SUBF12
0000ac 940e 06e9 	CALL SUBOPT_0x1
                 ; 0000 0033                 break;
                 ; 0000 0034             default: break;
                 _0xA:
                 ; 0000 0035         }
                 _0x5:
                 ; 0000 0036     return result;
0000ae 940e 06f1 	CALL SUBOPT_0x3
0000b0 940c 0302 	JMP  _0x20C0006
                 ; 0000 0037 }
                 ; .FEND
                 ;
                 ;
                 ;float number[3] = {0, 1, 0};
                 
                 	.DSEG
                 ;char operation[2] = {KEYPAD_ADDITION, KEYPAD_MULTIPLICATION};
                 ;int operation_enter = 0;
                 ;int equal_enter = 1;
                 ; char buffer[32];
                 ;
                 ;void main(void) {
                 ; 0000 0040 void main(void) {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0041     unsigned char key_res;
                 ; 0000 0042     DDRC = 0xFF;
                 ;	key_res -> R17
0000b2 efef      	LDI  R30,LOW(255)
0000b3 bbe4      	OUT  0x14,R30
                 ; 0000 0043     DDRD = 0x0F;
0000b4 e0ef      	LDI  R30,LOW(15)
0000b5 bbe1      	OUT  0x11,R30
                 ; 0000 0044     PORTC = 0x00;
0000b6 e0e0      	LDI  R30,LOW(0)
0000b7 bbe5      	OUT  0x15,R30
                 ; 0000 0045 
                 ; 0000 0046     lcd_init(16);
0000b8 e1a0      	LDI  R26,LOW(16)
0000b9 d15e      	RCALL _lcd_init
                 ; 0000 0047     lcd_clear();
0000ba d12b      	RCALL _lcd_clear
                 ; 0000 0048 
                 ; 0000 0049     while (1) {
                 _0xD:
                 ; 0000 004A         key_res = keypad_scan();
0000bb d0a8      	RCALL _keypad_scan
0000bc 2f1e      	MOV  R17,R30
                 ; 0000 004B 
                 ; 0000 004C         if (key_res != 255) {
0000bd 3f1f      	CPI  R17,255
0000be f409      	BRNE PC+2
0000bf c0a2      	RJMP _0x10
                 ; 0000 004D             while (keypad_scan() != 255);
                 _0x11:
0000c0 d0a3      	RCALL _keypad_scan
0000c1 3fef      	CPI  R30,LOW(0xFF)
0000c2 f7e9      	BRNE _0x11
                 ; 0000 004E             delay_ms(20);
0000c3 e1a4      	LDI  R26,LOW(20)
0000c4 e0b0      	LDI  R27,0
0000c5 940e 0862 	CALL _delay_ms
                 ; 0000 004F 
                 ; 0000 0050             if (key_res == KEYPAD_AC) {
0000c7 3413      	CPI  R17,67
0000c8 f421      	BRNE _0x14
                 ; 0000 0051                 lcd_clear();
0000c9 d11c      	RCALL _lcd_clear
                 ; 0000 0052 
                 ; 0000 0053                 number[0] = 0;
0000ca 940e 06f4 	CALL SUBOPT_0x4
                 ; 0000 0054                 number[1] = 1;
                 ; 0000 0055                 number[2] = 0;
                 ; 0000 0056                 operation[0] = KEYPAD_ADDITION;
                 ; 0000 0057                 operation[1] = KEYPAD_MULTIPLICATION;
                 ; 0000 0058                 operation_enter = 0;
                 ; 0000 0059                 equal_enter = 1;
                 ; 0000 005A 
                 ; 0000 005B             } else if (key_res == KEYPAD_EQUAL) {
0000cc c095      	RJMP _0x15
                 _0x14:
0000cd 331d      	CPI  R17,61
0000ce f589      	BRNE _0x16
                 ; 0000 005C                 if (operation_enter != 1 && equal_enter != 1) {
0000cf e0e1      	LDI  R30,LOW(1)
0000d0 e0f0      	LDI  R31,HIGH(1)
0000d1 15e4      	CP   R30,R4
0000d2 05f5      	CPC  R31,R5
0000d3 f019      	BREQ _0x18
0000d4 940e 0719 	CALL SUBOPT_0x5
0000d6 f409      	BRNE _0x19
                 _0x18:
0000d7 c027      	RJMP _0x17
                 _0x19:
                 ; 0000 005D                     number[1] = calculate(number[1], number[2], operation[1]);
0000d8 940e 071e 	CALL SUBOPT_0x6
0000da 940e 0729 	CALL SUBOPT_0x7
                 ; 0000 005E                     number[2] = 0;
                 ; 0000 005F                     number[0] = calculate(number[0], number[1], operation[0]);
0000dc 940e 0748 	CALL SUBOPT_0x8
0000de 940e 071e 	CALL SUBOPT_0x6
0000e0 940e 0753 	CALL SUBOPT_0x9
                 ; 0000 0060                     number[1] = 0;
                +
0000e2 e0a0     +LDI R26 , LOW ( 0x0 )
0000e3 e0b0     +LDI R27 , HIGH ( 0x0 )
0000e4 e080     +LDI R24 , BYTE3 ( 0x0 )
0000e5 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
0000e6 940e 0a99 	CALL __PUTDZ20
                 ; 0000 0061 
                 ; 0000 0062                     lcd_gotoxy(0, 1);
0000e8 e0e0      	LDI  R30,LOW(0)
0000e9 93ea      	ST   -Y,R30
0000ea e0a1      	LDI  R26,LOW(1)
0000eb d0ed      	RCALL _lcd_gotoxy
                 ; 0000 0063                     sprintf(buffer, "%.2f", number[0]);
0000ec e6ee      	LDI  R30,LOW(_buffer)
0000ed e0f2      	LDI  R31,HIGH(_buffer)
0000ee 93fa      	ST   -Y,R31
0000ef 93ea      	ST   -Y,R30
                +
0000f0 e6e2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000f1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000f2 93fa      	ST   -Y,R31
0000f3 93ea      	ST   -Y,R30
0000f4 940e 0748 	CALL SUBOPT_0x8
0000f6 e084      	LDI  R24,4
0000f7 940e 063e 	CALL _sprintf
0000f9 9628      	ADIW R28,8
                 ; 0000 0064                     lcd_puts(buffer);
0000fa e6ae      	LDI  R26,LOW(_buffer)
0000fb e0b2      	LDI  R27,HIGH(_buffer)
0000fc d10a      	RCALL _lcd_puts
                 ; 0000 0065 
                 ; 0000 0066                     number[0] = 0;
0000fd 940e 06f4 	CALL SUBOPT_0x4
                 ; 0000 0067                     number[1] = 1;
                 ; 0000 0068                     number[2] = 0;
                 ; 0000 0069                     operation[0] = KEYPAD_ADDITION;
                 ; 0000 006A                     operation[1] = KEYPAD_MULTIPLICATION;
                 ; 0000 006B                     operation_enter = 0;
                 ; 0000 006C                     equal_enter = 1;
                 ; 0000 006D                 }
                 ; 0000 006E 
                 ; 0000 006F             } else if (key_res == KEYPAD_DIVISION || key_res == KEYPAD_MULTIPLICATION || key_res == KEYPAD_MINUS || key_ ...
                 _0x17:
0000ff c062      	RJMP _0x1A
                 _0x16:
000100 321f      	CPI  R17,47
000101 f031      	BREQ _0x1C
000102 321a      	CPI  R17,42
000103 f021      	BREQ _0x1C
000104 321d      	CPI  R17,45
000105 f011      	BREQ _0x1C
000106 321b      	CPI  R17,43
000107 f579      	BRNE _0x1B
                 _0x1C:
                 ; 0000 0070                 if (operation_enter != 1 && equal_enter != 1) {
000108 e0e1      	LDI  R30,LOW(1)
000109 e0f0      	LDI  R31,HIGH(1)
00010a 15e4      	CP   R30,R4
00010b 05f5      	CPC  R31,R5
00010c f019      	BREQ _0x1F
00010d 940e 0719 	CALL SUBOPT_0x5
00010f f409      	BRNE _0x20
                 _0x1F:
000110 c025      	RJMP _0x1E
                 _0x20:
                 ; 0000 0071                     if (key_res == KEYPAD_DIVISION || key_res == KEYPAD_MULTIPLICATION) {
000111 321f      	CPI  R17,47
000112 f011      	BREQ _0x22
000113 321a      	CPI  R17,42
000114 f439      	BRNE _0x21
                 _0x22:
                 ; 0000 0072                         number[1] = calculate(number[1], number[2], operation[1]);
000115 940e 071e 	CALL SUBOPT_0x6
000117 940e 0729 	CALL SUBOPT_0x7
                 ; 0000 0073                         number[2] = 0;
                 ; 0000 0074                         operation[1] = key_res;
                +
000119 9310 026d+STS _operation + ( 1 ) , R17
                 	__PUTBMRN _operation,1,17
                 ; 0000 0075                     } else {
00011b c015      	RJMP _0x24
                 _0x21:
                 ; 0000 0076                         number[1] = calculate(number[1], number[2], operation[1]);
00011c 940e 071e 	CALL SUBOPT_0x6
00011e 940e 0729 	CALL SUBOPT_0x7
                 ; 0000 0077                         number[2] = 0;
                 ; 0000 0078                         number[0] = calculate(number[0], number[1], operation[0]);
000120 940e 0748 	CALL SUBOPT_0x8
000122 940e 071e 	CALL SUBOPT_0x6
000124 940e 0753 	CALL SUBOPT_0x9
                 ; 0000 0079                         number[1] = 1;
                +
000126 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000127 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000128 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000129 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00012a 940e 0a99 	CALL __PUTDZ20
                 ; 0000 007A                         operation[0] = key_res;
00012c 9310 026c 	STS  _operation,R17
                 ; 0000 007B                         operation[1] = KEYPAD_MULTIPLICATION;
00012e e2ea      	LDI  R30,LOW(42)
                +
00012f 93e0 026d+STS _operation + ( 1 ) , R30
                 	__PUTB1MN _operation,1
                 ; 0000 007C                     }
                 _0x24:
                 ; 0000 007D                     lcd_putchar(key_res);
000131 2fa1      	MOV  R26,R17
000132 d0bf      	RCALL _lcd_putchar
                 ; 0000 007E 
                 ; 0000 007F                     //lcd_clear();
                 ; 0000 0080                     //sprintf(buffer, "%.2f %c %.2f %c %.2f = %.2f", number[0], operation[0], number[1], operation[1], n ...
                 ; 0000 0081                     //lcd_puts(buffer);
                 ; 0000 0082 
                 ; 0000 0083                     operation_enter = 1;
000133 e0e1      	LDI  R30,LOW(1)
000134 e0f0      	LDI  R31,HIGH(1)
000135 012f      	MOVW R4,R30
                 ; 0000 0084                 }
                 ; 0000 0085             } else {
                 _0x1E:
000136 c02b      	RJMP _0x25
                 _0x1B:
                 ; 0000 0086                 if (equal_enter == 1) {
000137 940e 0719 	CALL SUBOPT_0x5
000139 f409      	BRNE _0x26
                 ; 0000 0087                     lcd_clear();
00013a d0ab      	RCALL _lcd_clear
                 ; 0000 0088                 }
                 ; 0000 0089                 equal_enter = 0;
                 _0x26:
00013b 2466      	CLR  R6
00013c 2477      	CLR  R7
                 ; 0000 008A                 operation_enter = 0;
00013d 2444      	CLR  R4
00013e 2455      	CLR  R5
                 ; 0000 008B                 lcd_putchar(key_res);
00013f 2fa1      	MOV  R26,R17
000140 d0b1      	RCALL _lcd_putchar
                 ; 0000 008C 
                 ; 0000 008D                 number[2] *= 10;
                +
000141 91e0 0268+LDS R30 , _number + ( 8 )
000143 91f0 0269+LDS R31 , _number + ( 8 ) + 1
000145 9160 026a+LDS R22 , _number + ( 8 ) + 2
000147 9170 026b+LDS R23 , _number + ( 8 ) + 3
                 	__GETD1MN _number,8
                +
000149 e0a0     +LDI R26 , LOW ( 0x41200000 )
00014a e0b0     +LDI R27 , HIGH ( 0x41200000 )
00014b e280     +LDI R24 , BYTE3 ( 0x41200000 )
00014c e491     +LDI R25 , BYTE4 ( 0x41200000 )
                 	__GETD2N 0x41200000
00014d 940e 0962 	CALL __MULF12
00014f 940e 0762 	CALL SUBOPT_0xA
                 ; 0000 008E                 number[2] += key_res - 48;
                +
000151 91a0 0268+LDS R26 , _number + ( 8 )
000153 91b0 0269+LDS R27 , _number + ( 8 ) + 1
000155 9180 026a+LDS R24 , _number + ( 8 ) + 2
000157 9190 026b+LDS R25 , _number + ( 8 ) + 3
                 	__GETD2MN _number,8
000159 2fe1      	MOV  R30,R17
00015a e0f0      	LDI  R31,0
00015b 97f0      	SBIW R30,48
00015c 940e 076b 	CALL SUBOPT_0xB
00015e 940e 0912 	CALL __ADDF12
000160 940e 0762 	CALL SUBOPT_0xA
                 ; 0000 008F 
                 ; 0000 0090                 //lcd_clear();
                 ; 0000 0091                 //sprintf(buffer, "%.2f %c %.2f %c %.2f = %.2f", number[0], operation[0], number[1], operation[1], numbe ...
                 ; 0000 0092                 //lcd_puts(buffer);
                 ; 0000 0093             }
                 _0x25:
                 _0x1A:
                 _0x15:
                 ; 0000 0094 
                 ; 0000 0095         }
                 ; 0000 0096     }
                 _0x10:
000162 cf58      	RJMP _0xD
                 ; 0000 0097 }
                 _0x27:
000163 cfff      	RJMP _0x27
                 ; .FEND
                 ;
                 ;unsigned char keypad_scan() {
                 ; 0000 0099 unsigned char keypad_scan() {
                 _keypad_scan:
                 ; .FSTART _keypad_scan
                 ; 0000 009A     unsigned char result = 255;
                 ; 0000 009B 
                 ; 0000 009C     ////////////////////////  ROW1 ////////////////////////
                 ; 0000 009D     KEYPAD_R1 = 1;
000164 931a      	ST   -Y,R17
                 ;	result -> R17
000165 ef1f      	LDI  R17,255
000166 9a90      	SBI  0x12,0
                 ; 0000 009E     KEYPAD_R2 = 0;
000167 9891      	CBI  0x12,1
                 ; 0000 009F     KEYPAD_R3 = 0;
000168 940e 0770 	CALL SUBOPT_0xC
                 ; 0000 00A0     KEYPAD_R4 = 0;
                 ; 0000 00A1 
                 ; 0000 00A2     delay_ms(5);
                 ; 0000 00A3     if (KEYPAD_C1)
00016a 9b84      	SBIS 0x10,4
00016b c002      	RJMP _0x30
                 ; 0000 00A4         result = KEYPAD_NUM7;
00016c e317      	LDI  R17,LOW(55)
                 ; 0000 00A5     else if (KEYPAD_C2)
00016d c00a      	RJMP _0x31
                 _0x30:
00016e 9b85      	SBIS 0x10,5
00016f c002      	RJMP _0x32
                 ; 0000 00A6         result = KEYPAD_NUM8;
000170 e318      	LDI  R17,LOW(56)
                 ; 0000 00A7     else if (KEYPAD_C3)
000171 c006      	RJMP _0x33
                 _0x32:
000172 9b86      	SBIS 0x10,6
000173 c002      	RJMP _0x34
                 ; 0000 00A8         result = KEYPAD_NUM9;
000174 e319      	LDI  R17,LOW(57)
                 ; 0000 00A9     else if (KEYPAD_C4)
000175 c002      	RJMP _0x35
                 _0x34:
000176 9987      	SBIC 0x10,7
                 ; 0000 00AA         result = KEYPAD_DIVISION;
000177 e21f      	LDI  R17,LOW(47)
                 ; 0000 00AB 
                 ; 0000 00AC 
                 ; 0000 00AD     ////////////////////////  ROW2 ////////////////////////
                 ; 0000 00AE     KEYPAD_R1 = 0;
                 _0x35:
                 _0x33:
                 _0x31:
000178 9890      	CBI  0x12,0
                 ; 0000 00AF     KEYPAD_R2 = 1;
000179 9a91      	SBI  0x12,1
                 ; 0000 00B0     KEYPAD_R3 = 0;
00017a 940e 0770 	CALL SUBOPT_0xC
                 ; 0000 00B1     KEYPAD_R4 = 0;
                 ; 0000 00B2 
                 ; 0000 00B3     delay_ms(5);
                 ; 0000 00B4     if (KEYPAD_C1)
00017c 9b84      	SBIS 0x10,4
00017d c002      	RJMP _0x3F
                 ; 0000 00B5         result = KEYPAD_NUM4;
00017e e314      	LDI  R17,LOW(52)
                 ; 0000 00B6     else if (KEYPAD_C2)
00017f c00a      	RJMP _0x40
                 _0x3F:
000180 9b85      	SBIS 0x10,5
000181 c002      	RJMP _0x41
                 ; 0000 00B7         result = KEYPAD_NUM5;
000182 e315      	LDI  R17,LOW(53)
                 ; 0000 00B8     else if (KEYPAD_C3)
000183 c006      	RJMP _0x42
                 _0x41:
000184 9b86      	SBIS 0x10,6
000185 c002      	RJMP _0x43
                 ; 0000 00B9         result = KEYPAD_NUM6;
000186 e316      	LDI  R17,LOW(54)
                 ; 0000 00BA     else if (KEYPAD_C4)
000187 c002      	RJMP _0x44
                 _0x43:
000188 9987      	SBIC 0x10,7
                 ; 0000 00BB         result = KEYPAD_MULTIPLICATION;
000189 e21a      	LDI  R17,LOW(42)
                 ; 0000 00BC     ////////////////////////  ROW3 ////////////////////////
                 ; 0000 00BD     KEYPAD_R1 = 0;
                 _0x44:
                 _0x42:
                 _0x40:
00018a 9890      	CBI  0x12,0
                 ; 0000 00BE     KEYPAD_R2 = 0;
00018b 9891      	CBI  0x12,1
                 ; 0000 00BF     KEYPAD_R3 = 1;
00018c 9a92      	SBI  0x12,2
                 ; 0000 00C0     KEYPAD_R4 = 0;
00018d 9893      	CBI  0x12,3
                 ; 0000 00C1 
                 ; 0000 00C2     delay_ms(5);
00018e e0a5      	LDI  R26,LOW(5)
00018f e0b0      	LDI  R27,0
000190 940e 0862 	CALL _delay_ms
                 ; 0000 00C3     if (KEYPAD_C1)
000192 9b84      	SBIS 0x10,4
000193 c002      	RJMP _0x4E
                 ; 0000 00C4         result = KEYPAD_NUM1;
000194 e311      	LDI  R17,LOW(49)
                 ; 0000 00C5     else if (KEYPAD_C2)
000195 c00a      	RJMP _0x4F
                 _0x4E:
000196 9b85      	SBIS 0x10,5
000197 c002      	RJMP _0x50
                 ; 0000 00C6         result = KEYPAD_NUM2;
000198 e312      	LDI  R17,LOW(50)
                 ; 0000 00C7     else if (KEYPAD_C3)
000199 c006      	RJMP _0x51
                 _0x50:
00019a 9b86      	SBIS 0x10,6
00019b c002      	RJMP _0x52
                 ; 0000 00C8         result = KEYPAD_NUM3;
00019c e313      	LDI  R17,LOW(51)
                 ; 0000 00C9     else if (KEYPAD_C4)
00019d c002      	RJMP _0x53
                 _0x52:
00019e 9987      	SBIC 0x10,7
                 ; 0000 00CA         result = KEYPAD_MINUS;
00019f e21d      	LDI  R17,LOW(45)
                 ; 0000 00CB     ////////////////////////  ROW4 ////////////////////////
                 ; 0000 00CC     KEYPAD_R1 = 0;
                 _0x53:
                 _0x51:
                 _0x4F:
0001a0 9890      	CBI  0x12,0
                 ; 0000 00CD     KEYPAD_R2 = 0;
0001a1 9891      	CBI  0x12,1
                 ; 0000 00CE     KEYPAD_R3 = 0;
0001a2 9892      	CBI  0x12,2
                 ; 0000 00CF     KEYPAD_R4 = 1;
0001a3 9a93      	SBI  0x12,3
                 ; 0000 00D0 
                 ; 0000 00D1     delay_ms(5);
0001a4 e0a5      	LDI  R26,LOW(5)
0001a5 e0b0      	LDI  R27,0
0001a6 940e 0862 	CALL _delay_ms
                 ; 0000 00D2     if (KEYPAD_C1)
0001a8 9b84      	SBIS 0x10,4
0001a9 c002      	RJMP _0x5D
                 ; 0000 00D3         result = KEYPAD_AC;
0001aa e413      	LDI  R17,LOW(67)
                 ; 0000 00D4     else if (KEYPAD_C2)
0001ab c00a      	RJMP _0x5E
                 _0x5D:
0001ac 9b85      	SBIS 0x10,5
0001ad c002      	RJMP _0x5F
                 ; 0000 00D5         result = KEYPAD_NUM0;
0001ae e310      	LDI  R17,LOW(48)
                 ; 0000 00D6     else if (KEYPAD_C3)
0001af c006      	RJMP _0x60
                 _0x5F:
0001b0 9b86      	SBIS 0x10,6
0001b1 c002      	RJMP _0x61
                 ; 0000 00D7         result = KEYPAD_EQUAL;
0001b2 e31d      	LDI  R17,LOW(61)
                 ; 0000 00D8     else if (KEYPAD_C4)
0001b3 c002      	RJMP _0x62
                 _0x61:
0001b4 9987      	SBIC 0x10,7
                 ; 0000 00D9         result = KEYPAD_ADDITION;
0001b5 e21b      	LDI  R17,LOW(43)
                 ; 0000 00DA 
                 ; 0000 00DB     return result;
                 _0x62:
                 _0x60:
                 _0x5E:
0001b6 2fe1      	MOV  R30,R17
0001b7 9119      	LD   R17,Y+
0001b8 9508      	RET
                 ; 0000 00DC }
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0001b9 93aa      	ST   -Y,R26
0001ba b3e5      	IN   R30,0x15
0001bb 70ef      	ANDI R30,LOW(0xF)
0001bc 2fae      	MOV  R26,R30
0001bd 81e8      	LD   R30,Y
0001be 7fe0      	ANDI R30,LOW(0xF0)
0001bf 2bea      	OR   R30,R26
0001c0 bbe5      	OUT  0x15,R30
                +
0001c1 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001c2 958a     +DEC R24
0001c3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001c4 9aaa      	SBI  0x15,2
                +
0001c5 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001c6 958a     +DEC R24
0001c7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001c8 98aa      	CBI  0x15,2
                +
0001c9 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0001ca 958a     +DEC R24
0001cb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0001cc c077      	RJMP _0x20C0007
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0001cd 93aa      	ST   -Y,R26
0001ce 81a8      	LD   R26,Y
0001cf dfe9      	RCALL __lcd_write_nibble_G100
0001d0 81e8          ld    r30,y
0001d1 95e2          swap  r30
0001d2 83e8          st    y,r30
0001d3 81a8      	LD   R26,Y
0001d4 dfe4      	RCALL __lcd_write_nibble_G100
                +
0001d5 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0001d6 958a     +DEC R24
0001d7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0001d8 c06b      	RJMP _0x20C0007
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0001d9 93aa      	ST   -Y,R26
0001da 81e8      	LD   R30,Y
0001db e0f0      	LDI  R31,0
0001dc 57e2      	SUBI R30,LOW(-__base_y_G100)
0001dd 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0001de 81e0      	LD   R30,Z
0001df 81a9      	LDD  R26,Y+1
0001e0 0fae      	ADD  R26,R30
0001e1 dfeb      	RCALL __lcd_write_data
0001e2 8099      	LDD  R9,Y+1
0001e3 8088      	LDD  R8,Y+0
0001e4 9622      	ADIW R28,2
0001e5 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001e6 e0a2      	LDI  R26,LOW(2)
0001e7 940e 0776 	CALL SUBOPT_0xD
0001e9 e0ac      	LDI  R26,LOW(12)
0001ea dfe2      	RCALL __lcd_write_data
0001eb e0a1      	LDI  R26,LOW(1)
0001ec 940e 0776 	CALL SUBOPT_0xD
0001ee e0e0      	LDI  R30,LOW(0)
0001ef 2e8e      	MOV  R8,R30
0001f0 2e9e      	MOV  R9,R30
0001f1 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0001f2 93aa      	ST   -Y,R26
0001f3 81a8      	LD   R26,Y
0001f4 30aa      	CPI  R26,LOW(0xA)
0001f5 f011      	BREQ _0x2000005
0001f6 149b      	CP   R9,R11
0001f7 f048      	BRLO _0x2000004
                 _0x2000005:
0001f8 e0e0      	LDI  R30,LOW(0)
0001f9 93ea      	ST   -Y,R30
0001fa 9483      	INC  R8
0001fb 2da8      	MOV  R26,R8
0001fc dfdc      	RCALL _lcd_gotoxy
0001fd 81a8      	LD   R26,Y
0001fe 30aa      	CPI  R26,LOW(0xA)
0001ff f409      	BRNE _0x2000007
000200 c043      	RJMP _0x20C0007
                 _0x2000007:
                 _0x2000004:
000201 9493      	INC  R9
000202 9aa8      	SBI  0x15,0
000203 81a8      	LD   R26,Y
000204 dfc8      	RCALL __lcd_write_data
000205 98a8      	CBI  0x15,0
000206 c03d      	RJMP _0x20C0007
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000207 93ba      	ST   -Y,R27
000208 93aa      	ST   -Y,R26
000209 931a      	ST   -Y,R17
                 _0x2000008:
00020a 81a9      	LDD  R26,Y+1
00020b 81ba      	LDD  R27,Y+1+1
00020c 91ed      	LD   R30,X+
00020d 83a9      	STD  Y+1,R26
00020e 83ba      	STD  Y+1+1,R27
00020f 2f1e      	MOV  R17,R30
000210 30e0      	CPI  R30,0
000211 f019      	BREQ _0x200000A
000212 2fa1      	MOV  R26,R17
000213 dfde      	RCALL _lcd_putchar
000214 cff5      	RJMP _0x2000008
                 _0x200000A:
000215 8118      	LDD  R17,Y+0
000216 9623      	ADIW R28,3
000217 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000218 93aa      	ST   -Y,R26
000219 b3e4      	IN   R30,0x14
00021a 6fe0      	ORI  R30,LOW(0xF0)
00021b bbe4      	OUT  0x14,R30
00021c 9aa2      	SBI  0x14,2
00021d 9aa0      	SBI  0x14,0
00021e 9aa1      	SBI  0x14,1
00021f 98aa      	CBI  0x15,2
000220 98a8      	CBI  0x15,0
000221 98a9      	CBI  0x15,1
000222 80b8      	LDD  R11,Y+0
000223 81e8      	LD   R30,Y
000224 58e0      	SUBI R30,-LOW(128)
                +
000225 93e0 0290+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000227 81e8      	LD   R30,Y
000228 54e0      	SUBI R30,-LOW(192)
                +
000229 93e0 0291+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00022b e1a4      	LDI  R26,LOW(20)
00022c e0b0      	LDI  R27,0
00022d 940e 0862 	CALL _delay_ms
00022f 940e 077c 	CALL SUBOPT_0xE
000231 940e 077c 	CALL SUBOPT_0xE
000233 940e 077c 	CALL SUBOPT_0xE
000235 e2a0      	LDI  R26,LOW(32)
000236 df82      	RCALL __lcd_write_nibble_G100
                +
000237 ec88     +LDI R24 , LOW ( 200 )
000238 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000239 9701     +SBIW R24 , 1
00023a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00023b e2a8      	LDI  R26,LOW(40)
00023c df90      	RCALL __lcd_write_data
00023d e0a4      	LDI  R26,LOW(4)
00023e df8e      	RCALL __lcd_write_data
00023f e8a5      	LDI  R26,LOW(133)
000240 df8c      	RCALL __lcd_write_data
000241 e0a6      	LDI  R26,LOW(6)
000242 df8a      	RCALL __lcd_write_data
000243 dfa2      	RCALL _lcd_clear
                 _0x20C0007:
000244 9621      	ADIW R28,1
000245 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000246 940e 0784 	CALL SUBOPT_0xF
000248 e0e0      	LDI  R30,LOW(0)
000249 83ea      	STD  Y+2,R30
00024a e3ef      	LDI  R30,LOW(63)
00024b 83eb      	STD  Y+3,R30
00024c 931a      	ST   -Y,R17
00024d 930a      	ST   -Y,R16
00024e 85eb      	LDD  R30,Y+11
00024f 85fc      	LDD  R31,Y+11+1
000250 3fef      	CPI  R30,LOW(0xFFFF)
000251 efaf      	LDI  R26,HIGH(0xFFFF)
000252 07fa      	CPC  R31,R26
000253 f439      	BRNE _0x202000D
000254 940e 078b 	CALL SUBOPT_0x10
                +
000256 e6ac     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
000257 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
000258 940e 06ba 	CALL _strcpyf
00025a c0a5      	RJMP _0x20C0005
                 _0x202000D:
00025b 3fef      	CPI  R30,LOW(0x7FFF)
00025c e7af      	LDI  R26,HIGH(0x7FFF)
00025d 07fa      	CPC  R31,R26
00025e f439      	BRNE _0x202000C
00025f 940e 078b 	CALL SUBOPT_0x10
                +
000261 e6ad     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
000262 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
000263 940e 06ba 	CALL _strcpyf
000265 c09a      	RJMP _0x20C0005
                 _0x202000C:
000266 85ac      	LDD  R26,Y+12
000267 23aa      	TST  R26
000268 f452      	BRPL _0x202000F
000269 940e 06ec 	CALL SUBOPT_0x2
00026b 940e 086c 	CALL __ANEGF1
00026d 940e 0790 	CALL SUBOPT_0x11
00026f 940e 0795 	CALL SUBOPT_0x12
000271 e2ed      	LDI  R30,LOW(45)
000272 93ec      	ST   X,R30
                 _0x202000F:
000273 85a8      	LDD  R26,Y+8
000274 30a7      	CPI  R26,LOW(0x7)
000275 f010      	BRLO _0x2020010
000276 e0e6      	LDI  R30,LOW(6)
000277 87e8      	STD  Y+8,R30
                 _0x2020010:
000278 8518      	LDD  R17,Y+8
                 _0x2020011:
000279 2fe1      	MOV  R30,R17
00027a 5011      	SUBI R17,1
00027b 30e0      	CPI  R30,0
00027c f039      	BREQ _0x2020013
00027d 940e 079c 	CALL SUBOPT_0x13
00027f 940e 07a1 	CALL SUBOPT_0x14
000281 940e 07a8 	CALL SUBOPT_0x15
000283 cff5      	RJMP _0x2020011
                 _0x2020013:
000284 940e 07ad 	CALL SUBOPT_0x16
000286 940e 0912 	CALL __ADDF12
000288 940e 0790 	CALL SUBOPT_0x11
00028a e010      	LDI  R17,LOW(0)
                +
00028b e0e0     +LDI R30 , LOW ( 0x3F800000 )
00028c e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00028d e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00028e e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00028f 940e 07a8 	CALL SUBOPT_0x15
                 _0x2020014:
000291 940e 07ad 	CALL SUBOPT_0x16
000293 940e 09f5 	CALL __CMPF12
000295 f088      	BRLO _0x2020016
000296 940e 079c 	CALL SUBOPT_0x13
000298 940e 07b6 	CALL SUBOPT_0x17
00029a 940e 07a8 	CALL SUBOPT_0x15
00029c 5f1f      	SUBI R17,-LOW(1)
00029d 3217      	CPI  R17,39
00029e f038      	BRLO _0x2020017
00029f 940e 078b 	CALL SUBOPT_0x10
                +
0002a1 e7a1     +LDI R26 , LOW ( 2 * _0x2020000 + ( 5 ) )
0002a2 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 5 ) )
                 	__POINTW2FN _0x2020000,5
0002a3 940e 06ba 	CALL _strcpyf
0002a5 c05a      	RJMP _0x20C0005
                 _0x2020017:
0002a6 cfea      	RJMP _0x2020014
                 _0x2020016:
0002a7 3010      	CPI  R17,0
0002a8 f429      	BRNE _0x2020018
0002a9 940e 0795 	CALL SUBOPT_0x12
0002ab e3e0      	LDI  R30,LOW(48)
0002ac 93ec      	ST   X,R30
0002ad c029      	RJMP _0x2020019
                 _0x2020018:
                 _0x202001A:
0002ae 2fe1      	MOV  R30,R17
0002af 5011      	SUBI R17,1
0002b0 30e0      	CPI  R30,0
0002b1 f129      	BREQ _0x202001C
0002b2 940e 079c 	CALL SUBOPT_0x13
0002b4 940e 07a1 	CALL SUBOPT_0x14
0002b6 940e 07bd 	CALL SUBOPT_0x18
0002b8 01df      	MOVW R26,R30
0002b9 01cb      	MOVW R24,R22
0002ba 940e 06a3 	CALL _floor
0002bc 940e 07a8 	CALL SUBOPT_0x15
0002be 940e 07ad 	CALL SUBOPT_0x16
0002c0 940e 09b0 	CALL __DIVF21
0002c2 940e 089f 	CALL __CFD1U
0002c4 2f0e      	MOV  R16,R30
0002c5 940e 0795 	CALL SUBOPT_0x12
0002c7 2fe0      	MOV  R30,R16
0002c8 5de0      	SUBI R30,-LOW(48)
0002c9 93ec      	ST   X,R30
0002ca 2fe0      	MOV  R30,R16
0002cb e0f0      	LDI  R31,0
0002cc 940e 079c 	CALL SUBOPT_0x13
0002ce 940e 076b 	CALL SUBOPT_0xB
0002d0 940e 0962 	CALL __MULF12
0002d2 940e 07c4 	CALL SUBOPT_0x19
0002d4 940e 07c9 	CALL SUBOPT_0x1A
0002d6 cfd7      	RJMP _0x202001A
                 _0x202001C:
                 _0x2020019:
0002d7 85e8      	LDD  R30,Y+8
0002d8 30e0      	CPI  R30,0
0002d9 f111      	BREQ _0x20C0004
0002da 940e 0795 	CALL SUBOPT_0x12
0002dc e2ee      	LDI  R30,LOW(46)
0002dd 93ec      	ST   X,R30
                 _0x202001E:
0002de 85e8      	LDD  R30,Y+8
0002df 50e1      	SUBI R30,LOW(1)
0002e0 87e8      	STD  Y+8,R30
0002e1 5fef      	SUBI R30,-LOW(1)
0002e2 f0c9      	BREQ _0x2020020
0002e3 940e 07c4 	CALL SUBOPT_0x19
0002e5 940e 07b6 	CALL SUBOPT_0x17
0002e7 940e 0790 	CALL SUBOPT_0x11
0002e9 940e 06ec 	CALL SUBOPT_0x2
0002eb 940e 089f 	CALL __CFD1U
0002ed 2f0e      	MOV  R16,R30
0002ee 940e 0795 	CALL SUBOPT_0x12
0002f0 2fe0      	MOV  R30,R16
0002f1 5de0      	SUBI R30,-LOW(48)
0002f2 93ec      	ST   X,R30
0002f3 2fe0      	MOV  R30,R16
0002f4 e0f0      	LDI  R31,0
0002f5 940e 07c4 	CALL SUBOPT_0x19
0002f7 940e 076b 	CALL SUBOPT_0xB
0002f9 940e 07c9 	CALL SUBOPT_0x1A
0002fb cfe2      	RJMP _0x202001E
                 _0x2020020:
                 _0x20C0004:
0002fc 81ae      	LDD  R26,Y+6
0002fd 81bf      	LDD  R27,Y+6+1
0002fe e0e0      	LDI  R30,LOW(0)
0002ff 93ec      	ST   X,R30
                 _0x20C0005:
000300 8119      	LDD  R17,Y+1
000301 8108      	LDD  R16,Y+0
                 _0x20C0006:
000302 962d      	ADIW R28,13
000303 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G102:
                 ; .FSTART _put_buff_G102
000304 93ba      	ST   -Y,R27
000305 93aa      	ST   -Y,R26
000306 931a      	ST   -Y,R17
000307 930a      	ST   -Y,R16
000308 81aa      	LDD  R26,Y+2
000309 81bb      	LDD  R27,Y+2+1
00030a 9612      	ADIW R26,2
00030b 940e 0a80 	CALL __GETW1P
00030d 9730      	SBIW R30,0
00030e f129      	BREQ _0x2040010
00030f 81aa      	LDD  R26,Y+2
000310 81bb      	LDD  R27,Y+2+1
000311 9614      	ADIW R26,4
000312 940e 0a80 	CALL __GETW1P
000314 018f      	MOVW R16,R30
000315 9730      	SBIW R30,0
000316 f061      	BREQ _0x2040012
                +
000317 3002     +CPI R16 , LOW ( 2 )
000318 e0e0     +LDI R30 , HIGH ( 2 )
000319 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00031a f080      	BRLO _0x2040013
00031b 01f8      	MOVW R30,R16
00031c 9731      	SBIW R30,1
00031d 018f      	MOVW R16,R30
                +
00031e 81aa     +LDD R26 , Y + 2
00031f 81bb     +LDD R27 , Y + 2 + 1
000320 9614     +ADIW R26 , 4
000321 93ed     +ST X + , R30
000322 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2040012:
000323 81aa      	LDD  R26,Y+2
000324 81bb      	LDD  R27,Y+2+1
000325 9612      	ADIW R26,2
000326 940e 07ce 	CALL SUBOPT_0x1B
000328 9731      	SBIW R30,1
000329 81ac      	LDD  R26,Y+4
00032a 83a0      	STD  Z+0,R26
                 _0x2040013:
00032b 81aa      	LDD  R26,Y+2
00032c 81bb      	LDD  R27,Y+2+1
00032d 940e 0a80 	CALL __GETW1P
00032f 23ff      	TST  R31
000330 f012      	BRMI _0x2040014
000331 940e 07ce 	CALL SUBOPT_0x1B
                 _0x2040014:
000333 c006      	RJMP _0x2040015
                 _0x2040010:
000334 81aa      	LDD  R26,Y+2
000335 81bb      	LDD  R27,Y+2+1
000336 efef      	LDI  R30,LOW(65535)
000337 efff      	LDI  R31,HIGH(65535)
000338 93ed      	ST   X+,R30
000339 93fc      	ST   X,R31
                 _0x2040015:
00033a 8119      	LDD  R17,Y+1
00033b 8108      	LDD  R16,Y+0
00033c 9625      	ADIW R28,5
00033d 9508      	RET
                 ; .FEND
                 __ftoe_G102:
                 ; .FSTART __ftoe_G102
00033e 940e 0784 	CALL SUBOPT_0xF
000340 e8e0      	LDI  R30,LOW(128)
000341 83ea      	STD  Y+2,R30
000342 e3ef      	LDI  R30,LOW(63)
000343 83eb      	STD  Y+3,R30
000344 940e 0abb 	CALL __SAVELOCR4
000346 85ee      	LDD  R30,Y+14
000347 85ff      	LDD  R31,Y+14+1
000348 3fef      	CPI  R30,LOW(0xFFFF)
000349 efaf      	LDI  R26,HIGH(0xFFFF)
00034a 07fa      	CPC  R31,R26
00034b f449      	BRNE _0x2040019
00034c 85e8      	LDD  R30,Y+8
00034d 85f9      	LDD  R31,Y+8+1
00034e 93fa      	ST   -Y,R31
00034f 93ea      	ST   -Y,R30
                +
000350 e7a6     +LDI R26 , LOW ( 2 * _0x2040000 + ( 0 ) )
000351 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW2FN _0x2040000,0
000352 940e 06ba 	CALL _strcpyf
000354 c0cb      	RJMP _0x20C0003
                 _0x2040019:
000355 3fef      	CPI  R30,LOW(0x7FFF)
000356 e7af      	LDI  R26,HIGH(0x7FFF)
000357 07fa      	CPC  R31,R26
000358 f449      	BRNE _0x2040018
000359 85e8      	LDD  R30,Y+8
00035a 85f9      	LDD  R31,Y+8+1
00035b 93fa      	ST   -Y,R31
00035c 93ea      	ST   -Y,R30
                +
00035d e7a7     +LDI R26 , LOW ( 2 * _0x2040000 + ( 1 ) )
00035e e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW2FN _0x2040000,1
00035f 940e 06ba 	CALL _strcpyf
000361 c0be      	RJMP _0x20C0003
                 _0x2040018:
000362 85ab      	LDD  R26,Y+11
000363 30a7      	CPI  R26,LOW(0x7)
000364 f010      	BRLO _0x204001B
000365 e0e6      	LDI  R30,LOW(6)
000366 87eb      	STD  Y+11,R30
                 _0x204001B:
000367 851b      	LDD  R17,Y+11
                 _0x204001C:
000368 2fe1      	MOV  R30,R17
000369 5011      	SUBI R17,1
00036a 30e0      	CPI  R30,0
00036b f029      	BREQ _0x204001E
00036c 940e 07d4 	CALL SUBOPT_0x1C
00036e 940e 07d9 	CALL SUBOPT_0x1D
000370 cff7      	RJMP _0x204001C
                 _0x204001E:
                +
000371 85ec     +LDD R30 , Y + 12
000372 85fd     +LDD R31 , Y + 12 + 1
000373 856e     +LDD R22 , Y + 12 + 2
000374 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000375 940e 0ab5 	CALL __CPD10
000377 f431      	BRNE _0x204001F
000378 e030      	LDI  R19,LOW(0)
000379 940e 07d4 	CALL SUBOPT_0x1C
00037b 940e 07d9 	CALL SUBOPT_0x1D
00037d c037      	RJMP _0x2040020
                 _0x204001F:
00037e 853b      	LDD  R19,Y+11
00037f 940e 07de 	CALL SUBOPT_0x1E
000381 f009      	BREQ PC+2
000382 f408      	BRCC PC+2
000383 c010      	RJMP _0x2040021
000384 940e 07d4 	CALL SUBOPT_0x1C
000386 940e 07d9 	CALL SUBOPT_0x1D
                 _0x2040022:
000388 940e 07de 	CALL SUBOPT_0x1E
00038a f040      	BRLO _0x2040024
00038b 940e 07e9 	CALL SUBOPT_0x1F
00038d 940e 07a1 	CALL SUBOPT_0x14
00038f 940e 07ee 	CALL SUBOPT_0x20
000391 5f3f      	SUBI R19,-LOW(1)
000392 cff5      	RJMP _0x2040022
                 _0x2040024:
000393 c00f      	RJMP _0x2040025
                 _0x2040021:
                 _0x2040026:
000394 940e 07de 	CALL SUBOPT_0x1E
000396 f440      	BRSH _0x2040028
000397 940e 07e9 	CALL SUBOPT_0x1F
000399 940e 07b6 	CALL SUBOPT_0x17
00039b 940e 07ee 	CALL SUBOPT_0x20
00039d 5031      	SUBI R19,LOW(1)
00039e cff5      	RJMP _0x2040026
                 _0x2040028:
00039f 940e 07d4 	CALL SUBOPT_0x1C
0003a1 940e 07d9 	CALL SUBOPT_0x1D
                 _0x2040025:
                +
0003a3 85ec     +LDD R30 , Y + 12
0003a4 85fd     +LDD R31 , Y + 12 + 1
0003a5 856e     +LDD R22 , Y + 12 + 2
0003a6 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0003a7 940e 07bd 	CALL SUBOPT_0x18
0003a9 940e 07ee 	CALL SUBOPT_0x20
0003ab 940e 07de 	CALL SUBOPT_0x1E
0003ad f038      	BRLO _0x2040029
0003ae 940e 07e9 	CALL SUBOPT_0x1F
0003b0 940e 07a1 	CALL SUBOPT_0x14
0003b2 940e 07ee 	CALL SUBOPT_0x20
0003b4 5f3f      	SUBI R19,-LOW(1)
                 _0x2040029:
                 _0x2040020:
0003b5 e010      	LDI  R17,LOW(0)
                 _0x204002A:
0003b6 85eb      	LDD  R30,Y+11
0003b7 17e1      	CP   R30,R17
0003b8 f1d8      	BRLO _0x204002C
                +
0003b9 81ac     +LDD R26 , Y + 4
0003ba 81bd     +LDD R27 , Y + 4 + 1
0003bb 818e     +LDD R24 , Y + 4 + 2
0003bc 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0003bd 940e 07a1 	CALL SUBOPT_0x14
0003bf 940e 07bd 	CALL SUBOPT_0x18
0003c1 01df      	MOVW R26,R30
0003c2 01cb      	MOVW R24,R22
0003c3 940e 06a3 	CALL _floor
0003c5 940e 07d9 	CALL SUBOPT_0x1D
                +
0003c7 81ec     +LDD R30 , Y + 4
0003c8 81fd     +LDD R31 , Y + 4 + 1
0003c9 816e     +LDD R22 , Y + 4 + 2
0003ca 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
0003cb 940e 07e9 	CALL SUBOPT_0x1F
0003cd 940e 09b0 	CALL __DIVF21
0003cf 940e 089f 	CALL __CFD1U
0003d1 2f0e      	MOV  R16,R30
0003d2 940e 07f3 	CALL SUBOPT_0x21
0003d4 2fe0      	MOV  R30,R16
0003d5 5de0      	SUBI R30,-LOW(48)
0003d6 93ec      	ST   X,R30
0003d7 2fe0      	MOV  R30,R16
0003d8 27ff      	CLR  R31
0003d9 2766      	CLR  R22
0003da 2777      	CLR  R23
0003db 940e 08d8 	CALL __CDF1
                +
0003dd 81ac     +LDD R26 , Y + 4
0003de 81bd     +LDD R27 , Y + 4 + 1
0003df 818e     +LDD R24 , Y + 4 + 2
0003e0 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0003e1 940e 0962 	CALL __MULF12
0003e3 940e 07e9 	CALL SUBOPT_0x1F
0003e5 940e 0aa8 	CALL __SWAPD12
0003e7 940e 090b 	CALL __SUBF12
0003e9 940e 07ee 	CALL SUBOPT_0x20
0003eb 2fe1      	MOV  R30,R17
0003ec 5f1f      	SUBI R17,-1
0003ed 30e0      	CPI  R30,0
0003ee f639      	BRNE _0x204002A
0003ef 940e 07f3 	CALL SUBOPT_0x21
0003f1 e2ee      	LDI  R30,LOW(46)
0003f2 93ec      	ST   X,R30
0003f3 cfc2      	RJMP _0x204002A
                 _0x204002C:
0003f4 940e 07fa 	CALL SUBOPT_0x22
0003f6 9731      	SBIW R30,1
0003f7 85aa      	LDD  R26,Y+10
0003f8 83a0      	STD  Z+0,R26
0003f9 3030      	CPI  R19,0
0003fa f42c      	BRGE _0x204002E
0003fb 9531      	NEG  R19
0003fc 85a8      	LDD  R26,Y+8
0003fd 85b9      	LDD  R27,Y+8+1
0003fe e2ed      	LDI  R30,LOW(45)
0003ff c003      	RJMP _0x2040113
                 _0x204002E:
000400 85a8      	LDD  R26,Y+8
000401 85b9      	LDD  R27,Y+8+1
000402 e2eb      	LDI  R30,LOW(43)
                 _0x2040113:
000403 93ec      	ST   X,R30
000404 940e 07fa 	CALL SUBOPT_0x22
000406 940e 07fa 	CALL SUBOPT_0x22
000408 9731      	SBIW R30,1
000409 01bf      	MOVW R22,R30
00040a 2fa3      	MOV  R26,R19
00040b e0ea      	LDI  R30,LOW(10)
00040c 940e 0a3a 	CALL __DIVB21
00040e 5de0      	SUBI R30,-LOW(48)
00040f 01db      	MOVW R26,R22
000410 93ec      	ST   X,R30
000411 940e 07fa 	CALL SUBOPT_0x22
000413 9731      	SBIW R30,1
000414 01bf      	MOVW R22,R30
000415 2fa3      	MOV  R26,R19
000416 e0ea      	LDI  R30,LOW(10)
000417 940e 0a64 	CALL __MODB21
000419 5de0      	SUBI R30,-LOW(48)
00041a 01db      	MOVW R26,R22
00041b 93ec      	ST   X,R30
00041c 85a8      	LDD  R26,Y+8
00041d 85b9      	LDD  R27,Y+8+1
00041e e0e0      	LDI  R30,LOW(0)
00041f 93ec      	ST   X,R30
                 _0x20C0003:
000420 940e 0ac2 	CALL __LOADLOCR4
000422 9660      	ADIW R28,16
000423 9508      	RET
                 ; .FEND
                 __print_G102:
                 ; .FSTART __print_G102
000424 93ba      	ST   -Y,R27
000425 93aa      	ST   -Y,R26
000426 97ef      	SBIW R28,63
000427 9761      	SBIW R28,17
000428 940e 0ab9 	CALL __SAVELOCR6
00042a e010      	LDI  R17,0
                +
00042b 01fe     +MOVW R30 , R28
00042c 5ae8     +SUBI R30 , LOW ( - 88 )
00042d 4fff     +SBCI R31 , HIGH ( - 88 )
00042e 9001     +LD R0 , Z +
00042f 81f0     +LD R31 , Z
000430 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000431 87e8      	STD  Y+8,R30
000432 87f9      	STD  Y+8+1,R31
                +
000433 01fe     +MOVW R30 , R28
000434 5aea     +SUBI R30 , LOW ( - 86 )
000435 4fff     +SBCI R31 , HIGH ( - 86 )
000436 9001     +LD R0 , Z +
000437 81f0     +LD R31 , Z
000438 2de0     +MOV R30 , R0
                 	__GETW1SX 86
000439 83ee      	STD  Y+6,R30
00043a 83ff      	STD  Y+6+1,R31
00043b 81ae      	LDD  R26,Y+6
00043c 81bf      	LDD  R27,Y+6+1
00043d e0e0      	LDI  R30,LOW(0)
00043e e0f0      	LDI  R31,HIGH(0)
00043f 93ed      	ST   X+,R30
000440 93fc      	ST   X,R31
                 _0x2040030:
000441 01de      	MOVW R26,R28
000442 5aa4      	SUBI R26,LOW(-(92))
000443 4fbf      	SBCI R27,HIGH(-(92))
000444 940e 07ce 	CALL SUBOPT_0x1B
000446 9731      	SBIW R30,1
000447 91e4      	LPM  R30,Z
000448 2f2e      	MOV  R18,R30
000449 30e0      	CPI  R30,0
00044a f409      	BRNE PC+2
00044b c1e9      	RJMP _0x2040032
00044c 2fe1      	MOV  R30,R17
00044d 30e0      	CPI  R30,0
00044e f439      	BRNE _0x2040036
00044f 3225      	CPI  R18,37
000450 f411      	BRNE _0x2040037
000451 e011      	LDI  R17,LOW(1)
000452 c002      	RJMP _0x2040038
                 _0x2040037:
000453 940e 0800 	CALL SUBOPT_0x23
                 _0x2040038:
000455 c1de      	RJMP _0x2040035
                 _0x2040036:
000456 30e1      	CPI  R30,LOW(0x1)
000457 f4c1      	BRNE _0x2040039
000458 3225      	CPI  R18,37
000459 f419      	BRNE _0x204003A
00045a 940e 0800 	CALL SUBOPT_0x23
00045c c1d6      	RJMP _0x2040114
                 _0x204003A:
00045d e012      	LDI  R17,LOW(2)
00045e e0e0      	LDI  R30,LOW(0)
00045f 8bed      	STD  Y+21,R30
000460 e000      	LDI  R16,LOW(0)
000461 322d      	CPI  R18,45
000462 f411      	BRNE _0x204003B
000463 e001      	LDI  R16,LOW(1)
000464 c1cf      	RJMP _0x2040035
                 _0x204003B:
000465 322b      	CPI  R18,43
000466 f419      	BRNE _0x204003C
000467 e2eb      	LDI  R30,LOW(43)
000468 8bed      	STD  Y+21,R30
000469 c1ca      	RJMP _0x2040035
                 _0x204003C:
00046a 3220      	CPI  R18,32
00046b f419      	BRNE _0x204003D
00046c e2e0      	LDI  R30,LOW(32)
00046d 8bed      	STD  Y+21,R30
00046e c1c5      	RJMP _0x2040035
                 _0x204003D:
00046f c002      	RJMP _0x204003E
                 _0x2040039:
000470 30e2      	CPI  R30,LOW(0x2)
000471 f439      	BRNE _0x204003F
                 _0x204003E:
000472 e050      	LDI  R21,LOW(0)
000473 e013      	LDI  R17,LOW(3)
000474 3320      	CPI  R18,48
000475 f411      	BRNE _0x2040040
000476 6800      	ORI  R16,LOW(128)
000477 c1bc      	RJMP _0x2040035
                 _0x2040040:
000478 c002      	RJMP _0x2040041
                 _0x204003F:
000479 30e3      	CPI  R30,LOW(0x3)
00047a f491      	BRNE _0x2040042
                 _0x2040041:
00047b 3320      	CPI  R18,48
00047c f010      	BRLO _0x2040044
00047d 332a      	CPI  R18,58
00047e f008      	BRLO _0x2040045
                 _0x2040044:
00047f c007      	RJMP _0x2040043
                 _0x2040045:
000480 e0aa      	LDI  R26,LOW(10)
000481 9f5a      	MUL  R21,R26
000482 2d50      	MOV  R21,R0
000483 2fe2      	MOV  R30,R18
000484 53e0      	SUBI R30,LOW(48)
000485 0f5e      	ADD  R21,R30
000486 c1ad      	RJMP _0x2040035
                 _0x2040043:
000487 e040      	LDI  R20,LOW(0)
000488 322e      	CPI  R18,46
000489 f411      	BRNE _0x2040046
00048a e014      	LDI  R17,LOW(4)
00048b c1a8      	RJMP _0x2040035
                 _0x2040046:
00048c c00f      	RJMP _0x2040047
                 _0x2040042:
00048d 30e4      	CPI  R30,LOW(0x4)
00048e f499      	BRNE _0x2040049
00048f 3320      	CPI  R18,48
000490 f010      	BRLO _0x204004B
000491 332a      	CPI  R18,58
000492 f008      	BRLO _0x204004C
                 _0x204004B:
000493 c008      	RJMP _0x204004A
                 _0x204004C:
000494 6200      	ORI  R16,LOW(32)
000495 e0aa      	LDI  R26,LOW(10)
000496 9f4a      	MUL  R20,R26
000497 2d40      	MOV  R20,R0
000498 2fe2      	MOV  R30,R18
000499 53e0      	SUBI R30,LOW(48)
00049a 0f4e      	ADD  R20,R30
00049b c198      	RJMP _0x2040035
                 _0x204004A:
                 _0x2040047:
00049c 362c      	CPI  R18,108
00049d f419      	BRNE _0x204004D
00049e 6002      	ORI  R16,LOW(2)
00049f e015      	LDI  R17,LOW(5)
0004a0 c193      	RJMP _0x2040035
                 _0x204004D:
0004a1 c003      	RJMP _0x204004E
                 _0x2040049:
0004a2 30e5      	CPI  R30,LOW(0x5)
0004a3 f009      	BREQ PC+2
0004a4 c18f      	RJMP _0x2040035
                 _0x204004E:
0004a5 2fe2      	MOV  R30,R18
0004a6 36e3      	CPI  R30,LOW(0x63)
0004a7 f459      	BRNE _0x2040053
0004a8 940e 0807 	CALL SUBOPT_0x24
0004aa 940e 080e 	CALL SUBOPT_0x25
0004ac 940e 0807 	CALL SUBOPT_0x24
0004ae 81a4      	LDD  R26,Z+4
0004af 93aa      	ST   -Y,R26
0004b0 940e 0815 	CALL SUBOPT_0x26
0004b2 c180      	RJMP _0x2040054
                 _0x2040053:
0004b3 34e5      	CPI  R30,LOW(0x45)
0004b4 f011      	BREQ _0x2040057
0004b5 36e5      	CPI  R30,LOW(0x65)
0004b6 f409      	BRNE _0x2040058
                 _0x2040057:
0004b7 c003      	RJMP _0x2040059
                 _0x2040058:
0004b8 36e6      	CPI  R30,LOW(0x66)
0004b9 f009      	BREQ PC+2
0004ba c048      	RJMP _0x204005A
                 _0x2040059:
0004bb 01fe      	MOVW R30,R28
0004bc 9676      	ADIW R30,22
0004bd 87ee      	STD  Y+14,R30
0004be 87ff      	STD  Y+14+1,R31
0004bf 940e 081b 	CALL SUBOPT_0x27
0004c1 940e 0a84 	CALL __GETD1P
0004c3 940e 0822 	CALL SUBOPT_0x28
0004c5 940e 0827 	CALL SUBOPT_0x29
0004c7 85ad      	LDD  R26,Y+13
0004c8 23aa      	TST  R26
0004c9 f032      	BRMI _0x204005B
0004ca 89ad      	LDD  R26,Y+21
0004cb 32ab      	CPI  R26,LOW(0x2B)
0004cc f059      	BREQ _0x204005D
0004cd 32a0      	CPI  R26,LOW(0x20)
0004ce f081      	BREQ _0x204005F
0004cf c017      	RJMP _0x2040060
                 _0x204005B:
0004d0 940e 0829 	CALL SUBOPT_0x2A
0004d2 940e 086c 	CALL __ANEGF1
0004d4 940e 0822 	CALL SUBOPT_0x28
0004d6 e2ed      	LDI  R30,LOW(45)
0004d7 8bed      	STD  Y+21,R30
                 _0x204005D:
0004d8 ff07      	SBRS R16,7
0004d9 c005      	RJMP _0x2040061
0004da 89ed      	LDD  R30,Y+21
0004db 93ea      	ST   -Y,R30
0004dc 940e 0815 	CALL SUBOPT_0x26
0004de c008      	RJMP _0x2040062
                 _0x2040061:
                 _0x204005F:
0004df 85ee      	LDD  R30,Y+14
0004e0 85ff      	LDD  R31,Y+14+1
0004e1 9631      	ADIW R30,1
0004e2 87ee      	STD  Y+14,R30
0004e3 87ff      	STD  Y+14+1,R31
0004e4 9731      	SBIW R30,1
0004e5 89ad      	LDD  R26,Y+21
0004e6 83a0      	STD  Z+0,R26
                 _0x2040062:
                 _0x2040060:
0004e7 ff05      	SBRS R16,5
0004e8 e046      	LDI  R20,LOW(6)
0004e9 3626      	CPI  R18,102
0004ea f451      	BRNE _0x2040064
0004eb 940e 0829 	CALL SUBOPT_0x2A
0004ed 940e 0a9e 	CALL __PUTPARD1
0004ef 934a      	ST   -Y,R20
0004f0 89ab      	LDD  R26,Y+19
0004f1 89bc      	LDD  R27,Y+19+1
0004f2 940e 0246 	CALL _ftoa
0004f4 c009      	RJMP _0x2040065
                 _0x2040064:
0004f5 940e 0829 	CALL SUBOPT_0x2A
0004f7 940e 0a9e 	CALL __PUTPARD1
0004f9 934a      	ST   -Y,R20
0004fa 932a      	ST   -Y,R18
0004fb 89ac      	LDD  R26,Y+20
0004fc 89bd      	LDD  R27,Y+20+1
0004fd de40      	RCALL __ftoe_G102
                 _0x2040065:
0004fe 01fe      	MOVW R30,R28
0004ff 9676      	ADIW R30,22
000500 940e 082e 	CALL SUBOPT_0x2B
000502 c01e      	RJMP _0x2040066
                 _0x204005A:
000503 37e3      	CPI  R30,LOW(0x73)
000504 f439      	BRNE _0x2040068
000505 940e 0827 	CALL SUBOPT_0x29
000507 940e 0836 	CALL SUBOPT_0x2C
000509 940e 082e 	CALL SUBOPT_0x2B
00050b c00e      	RJMP _0x2040069
                 _0x2040068:
00050c 37e0      	CPI  R30,LOW(0x70)
00050d f4c1      	BRNE _0x204006B
00050e 940e 0827 	CALL SUBOPT_0x29
000510 940e 0836 	CALL SUBOPT_0x2C
000512 87ee      	STD  Y+14,R30
000513 87ff      	STD  Y+14+1,R31
000514 85ae      	LDD  R26,Y+14
000515 85bf      	LDD  R27,Y+14+1
000516 940e 06d3 	CALL _strlenf
000518 2f1e      	MOV  R17,R30
000519 6008      	ORI  R16,LOW(8)
                 _0x2040069:
00051a 770f      	ANDI R16,LOW(127)
00051b 3040      	CPI  R20,0
00051c f011      	BREQ _0x204006D
00051d 1741      	CP   R20,R17
00051e f008      	BRLO _0x204006E
                 _0x204006D:
00051f c001      	RJMP _0x204006C
                 _0x204006E:
000520 2f14      	MOV  R17,R20
                 _0x204006C:
                 _0x2040066:
000521 e040      	LDI  R20,LOW(0)
000522 e0e0      	LDI  R30,LOW(0)
000523 8bec      	STD  Y+20,R30
000524 e030      	LDI  R19,LOW(0)
000525 c06d      	RJMP _0x204006F
                 _0x204006B:
000526 36e4      	CPI  R30,LOW(0x64)
000527 f011      	BREQ _0x2040072
000528 36e9      	CPI  R30,LOW(0x69)
000529 f411      	BRNE _0x2040073
                 _0x2040072:
00052a 6004      	ORI  R16,LOW(4)
00052b c002      	RJMP _0x2040074
                 _0x2040073:
00052c 37e5      	CPI  R30,LOW(0x75)
00052d f4a1      	BRNE _0x2040075
                 _0x2040074:
00052e e0ea      	LDI  R30,LOW(10)
00052f 8bec      	STD  Y+20,R30
000530 ff01      	SBRS R16,1
000531 c008      	RJMP _0x2040076
                +
000532 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000533 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000534 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000535 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000536 940e 083b 	CALL SUBOPT_0x2D
000538 e01a      	LDI  R17,LOW(10)
000539 c022      	RJMP _0x2040077
                 _0x2040076:
                +
00053a e1e0     +LDI R30 , LOW ( 0x2710 )
00053b e2f7     +LDI R31 , HIGH ( 0x2710 )
00053c e060     +LDI R22 , BYTE3 ( 0x2710 )
00053d e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00053e 940e 083b 	CALL SUBOPT_0x2D
000540 e015      	LDI  R17,LOW(5)
000541 c01a      	RJMP _0x2040077
                 _0x2040075:
000542 35e8      	CPI  R30,LOW(0x58)
000543 f411      	BRNE _0x2040079
000544 6008      	ORI  R16,LOW(8)
000545 c003      	RJMP _0x204007A
                 _0x2040079:
000546 37e8      	CPI  R30,LOW(0x78)
000547 f009      	BREQ PC+2
000548 c0ea      	RJMP _0x20400B8
                 _0x204007A:
000549 e1e0      	LDI  R30,LOW(16)
00054a 8bec      	STD  Y+20,R30
00054b ff01      	SBRS R16,1
00054c c008      	RJMP _0x204007C
                +
00054d e0e0     +LDI R30 , LOW ( 0x10000000 )
00054e e0f0     +LDI R31 , HIGH ( 0x10000000 )
00054f e060     +LDI R22 , BYTE3 ( 0x10000000 )
000550 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000551 940e 083b 	CALL SUBOPT_0x2D
000553 e018      	LDI  R17,LOW(8)
000554 c007      	RJMP _0x2040077
                 _0x204007C:
                +
000555 e0e0     +LDI R30 , LOW ( 0x1000 )
000556 e1f0     +LDI R31 , HIGH ( 0x1000 )
000557 e060     +LDI R22 , BYTE3 ( 0x1000 )
000558 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000559 940e 083b 	CALL SUBOPT_0x2D
00055b e014      	LDI  R17,LOW(4)
                 _0x2040077:
00055c 3040      	CPI  R20,0
00055d f011      	BREQ _0x204007D
00055e 770f      	ANDI R16,LOW(127)
00055f c001      	RJMP _0x204007E
                 _0x204007D:
000560 e041      	LDI  R20,LOW(1)
                 _0x204007E:
000561 ff01      	SBRS R16,1
000562 c008      	RJMP _0x204007F
000563 940e 0827 	CALL SUBOPT_0x29
000565 940e 081b 	CALL SUBOPT_0x27
000567 9614      	ADIW R26,4
000568 940e 0a84 	CALL __GETD1P
00056a c00f      	RJMP _0x2040115
                 _0x204007F:
00056b ff02      	SBRS R16,2
00056c c007      	RJMP _0x2040081
00056d 940e 0827 	CALL SUBOPT_0x29
00056f 940e 0836 	CALL SUBOPT_0x2C
000571 940e 0a27 	CALL __CWD1
000573 c006      	RJMP _0x2040115
                 _0x2040081:
000574 940e 0827 	CALL SUBOPT_0x29
000576 940e 0836 	CALL SUBOPT_0x2C
000578 2766      	CLR  R22
000579 2777      	CLR  R23
                 _0x2040115:
                +
00057a 87ea     +STD Y + 10 , R30
00057b 87fb     +STD Y + 10 + 1 , R31
00057c 876c     +STD Y + 10 + 2 , R22
00057d 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00057e ff02      	SBRS R16,2
00057f c012      	RJMP _0x2040083
000580 85ad      	LDD  R26,Y+13
000581 23aa      	TST  R26
000582 f442      	BRPL _0x2040084
000583 940e 0829 	CALL SUBOPT_0x2A
000585 940e 0a19 	CALL __ANEGD1
000587 940e 0822 	CALL SUBOPT_0x28
000589 e2ed      	LDI  R30,LOW(45)
00058a 8bed      	STD  Y+21,R30
                 _0x2040084:
00058b 89ed      	LDD  R30,Y+21
00058c 30e0      	CPI  R30,0
00058d f019      	BREQ _0x2040085
00058e 5f1f      	SUBI R17,-LOW(1)
00058f 5f4f      	SUBI R20,-LOW(1)
000590 c001      	RJMP _0x2040086
                 _0x2040085:
000591 7f0b      	ANDI R16,LOW(251)
                 _0x2040086:
                 _0x2040083:
000592 2f34      	MOV  R19,R20
                 _0x204006F:
000593 fd00      	SBRC R16,0
000594 c014      	RJMP _0x2040087
                 _0x2040088:
000595 1715      	CP   R17,R21
000596 f410      	BRSH _0x204008B
000597 1735      	CP   R19,R21
000598 f008      	BRLO _0x204008C
                 _0x204008B:
000599 c00f      	RJMP _0x204008A
                 _0x204008C:
00059a ff07      	SBRS R16,7
00059b c008      	RJMP _0x204008D
00059c ff02      	SBRS R16,2
00059d c004      	RJMP _0x204008E
00059e 7f0b      	ANDI R16,LOW(251)
00059f 892d      	LDD  R18,Y+21
0005a0 5011      	SUBI R17,LOW(1)
0005a1 c001      	RJMP _0x204008F
                 _0x204008E:
0005a2 e320      	LDI  R18,LOW(48)
                 _0x204008F:
0005a3 c001      	RJMP _0x2040090
                 _0x204008D:
0005a4 e220      	LDI  R18,LOW(32)
                 _0x2040090:
0005a5 940e 0800 	CALL SUBOPT_0x23
0005a7 5051      	SUBI R21,LOW(1)
0005a8 cfec      	RJMP _0x2040088
                 _0x204008A:
                 _0x2040087:
                 _0x2040091:
0005a9 1714      	CP   R17,R20
0005aa f490      	BRSH _0x2040093
0005ab 6100      	ORI  R16,LOW(16)
0005ac ff02      	SBRS R16,2
0005ad c006      	RJMP _0x2040094
0005ae 940e 0840 	CALL SUBOPT_0x2E
0005b0 f009      	BREQ _0x2040095
0005b1 5051      	SUBI R21,LOW(1)
                 _0x2040095:
0005b2 5011      	SUBI R17,LOW(1)
0005b3 5041      	SUBI R20,LOW(1)
                 _0x2040094:
0005b4 e3e0      	LDI  R30,LOW(48)
0005b5 93ea      	ST   -Y,R30
0005b6 940e 0815 	CALL SUBOPT_0x26
0005b8 3050      	CPI  R21,0
0005b9 f009      	BREQ _0x2040096
0005ba 5051      	SUBI R21,LOW(1)
                 _0x2040096:
0005bb 5041      	SUBI R20,LOW(1)
0005bc cfec      	RJMP _0x2040091
                 _0x2040093:
0005bd 2f31      	MOV  R19,R17
0005be 89ec      	LDD  R30,Y+20
0005bf 30e0      	CPI  R30,0
0005c0 f4b9      	BRNE _0x2040097
                 _0x2040098:
0005c1 3030      	CPI  R19,0
0005c2 f0a1      	BREQ _0x204009A
0005c3 ff03      	SBRS R16,3
0005c4 c006      	RJMP _0x204009B
0005c5 85ee      	LDD  R30,Y+14
0005c6 85ff      	LDD  R31,Y+14+1
0005c7 9125      	LPM  R18,Z+
0005c8 87ee      	STD  Y+14,R30
0005c9 87ff      	STD  Y+14+1,R31
0005ca c005      	RJMP _0x204009C
                 _0x204009B:
0005cb 85ae      	LDD  R26,Y+14
0005cc 85bf      	LDD  R27,Y+14+1
0005cd 912d      	LD   R18,X+
0005ce 87ae      	STD  Y+14,R26
0005cf 87bf      	STD  Y+14+1,R27
                 _0x204009C:
0005d0 940e 0800 	CALL SUBOPT_0x23
0005d2 3050      	CPI  R21,0
0005d3 f009      	BREQ _0x204009D
0005d4 5051      	SUBI R21,LOW(1)
                 _0x204009D:
0005d5 5031      	SUBI R19,LOW(1)
0005d6 cfea      	RJMP _0x2040098
                 _0x204009A:
0005d7 c051      	RJMP _0x204009E
                 _0x2040097:
                 _0x20400A0:
0005d8 940e 0852 	CALL SUBOPT_0x2F
0005da 940e 0a3f 	CALL __DIVD21U
0005dc 2f2e      	MOV  R18,R30
0005dd 302a      	CPI  R18,10
0005de f030      	BRLO _0x20400A2
0005df ff03      	SBRS R16,3
0005e0 c002      	RJMP _0x20400A3
0005e1 5c29      	SUBI R18,-LOW(55)
0005e2 c001      	RJMP _0x20400A4
                 _0x20400A3:
0005e3 5a29      	SUBI R18,-LOW(87)
                 _0x20400A4:
0005e4 c001      	RJMP _0x20400A5
                 _0x20400A2:
0005e5 5d20      	SUBI R18,-LOW(48)
                 _0x20400A5:
0005e6 fd04      	SBRC R16,4
0005e7 c021      	RJMP _0x20400A7
0005e8 3321      	CPI  R18,49
0005e9 f460      	BRSH _0x20400A9
                +
0005ea 89a8     +LDD R26 , Y + 16
0005eb 89b9     +LDD R27 , Y + 16 + 1
0005ec 898a     +LDD R24 , Y + 16 + 2
0005ed 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
0005ee 30a1     +CPI R26 , LOW ( 0x1 )
0005ef e0e0     +LDI R30 , HIGH ( 0x1 )
0005f0 07be     +CPC R27 , R30
0005f1 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0005f2 078e     +CPC R24 , R30
0005f3 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0005f4 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0005f5 f409      	BRNE _0x20400A8
                 _0x20400A9:
0005f6 c00b      	RJMP _0x20400AB
                 _0x20400A8:
0005f7 1743      	CP   R20,R19
0005f8 f440      	BRSH _0x2040116
0005f9 1753      	CP   R21,R19
0005fa f010      	BRLO _0x20400AE
0005fb ff00      	SBRS R16,0
0005fc c001      	RJMP _0x20400AF
                 _0x20400AE:
0005fd c010      	RJMP _0x20400AD
                 _0x20400AF:
0005fe e220      	LDI  R18,LOW(32)
0005ff ff07      	SBRS R16,7
000600 c008      	RJMP _0x20400B0
                 _0x2040116:
000601 e320      	LDI  R18,LOW(48)
                 _0x20400AB:
000602 6100      	ORI  R16,LOW(16)
000603 ff02      	SBRS R16,2
000604 c004      	RJMP _0x20400B1
000605 940e 0840 	CALL SUBOPT_0x2E
000607 f009      	BREQ _0x20400B2
000608 5051      	SUBI R21,LOW(1)
                 _0x20400B2:
                 _0x20400B1:
                 _0x20400B0:
                 _0x20400A7:
000609 940e 0800 	CALL SUBOPT_0x23
00060b 3050      	CPI  R21,0
00060c f009      	BREQ _0x20400B3
00060d 5051      	SUBI R21,LOW(1)
                 _0x20400B3:
                 _0x20400AD:
00060e 5031      	SUBI R19,LOW(1)
00060f 940e 0852 	CALL SUBOPT_0x2F
000611 940e 0a70 	CALL __MODD21U
000613 940e 0822 	CALL SUBOPT_0x28
000615 89ec      	LDD  R30,Y+20
                +
000616 89a8     +LDD R26 , Y + 16
000617 89b9     +LDD R27 , Y + 16 + 1
000618 898a     +LDD R24 , Y + 16 + 2
000619 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00061a 27ff      	CLR  R31
00061b 2766      	CLR  R22
00061c 2777      	CLR  R23
00061d 940e 0a3f 	CALL __DIVD21U
00061f 940e 083b 	CALL SUBOPT_0x2D
                +
000621 89e8     +LDD R30 , Y + 16
000622 89f9     +LDD R31 , Y + 16 + 1
000623 896a     +LDD R22 , Y + 16 + 2
000624 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000625 940e 0ab5 	CALL __CPD10
000627 f009      	BREQ _0x20400A1
000628 cfaf      	RJMP _0x20400A0
                 _0x20400A1:
                 _0x204009E:
000629 ff00      	SBRS R16,0
00062a c008      	RJMP _0x20400B4
                 _0x20400B5:
00062b 3050      	CPI  R21,0
00062c f031      	BREQ _0x20400B7
00062d 5051      	SUBI R21,LOW(1)
00062e e2e0      	LDI  R30,LOW(32)
00062f 93ea      	ST   -Y,R30
000630 940e 0815 	CALL SUBOPT_0x26
000632 cff8      	RJMP _0x20400B5
                 _0x20400B7:
                 _0x20400B4:
                 _0x20400B8:
                 _0x2040054:
                 _0x2040114:
000633 e010      	LDI  R17,LOW(0)
                 _0x2040035:
000634 ce0c      	RJMP _0x2040030
                 _0x2040032:
000635 81ae      	LDD  R26,Y+6
000636 81bf      	LDD  R27,Y+6+1
000637 940e 0a80 	CALL __GETW1P
000639 940e 0ac0 	CALL __LOADLOCR6
00063b 96ef      	ADIW R28,63
00063c 966f      	ADIW R28,31
00063d 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00063e 92ff      	PUSH R15
00063f 2ef8      	MOV  R15,R24
000640 9726      	SBIW R28,6
000641 940e 0abb 	CALL __SAVELOCR4
000643 940e 085b 	CALL SUBOPT_0x30
000645 9730      	SBIW R30,0
000646 f419      	BRNE _0x20400B9
000647 efef      	LDI  R30,LOW(65535)
000648 efff      	LDI  R31,HIGH(65535)
000649 c023      	RJMP _0x20C0002
                 _0x20400B9:
00064a 01de      	MOVW R26,R28
00064b 9616      	ADIW R26,6
00064c 940e 0a15 	CALL __ADDW2R15
00064e 018d      	MOVW R16,R26
00064f 940e 085b 	CALL SUBOPT_0x30
000651 83ee      	STD  Y+6,R30
000652 83ff      	STD  Y+6+1,R31
000653 e0e0      	LDI  R30,LOW(0)
000654 87e8      	STD  Y+8,R30
000655 87e9      	STD  Y+8+1,R30
000656 01de      	MOVW R26,R28
000657 961a      	ADIW R26,10
000658 940e 0a15 	CALL __ADDW2R15
00065a 940e 0a80 	CALL __GETW1P
00065c 93fa      	ST   -Y,R31
00065d 93ea      	ST   -Y,R30
00065e 931a      	ST   -Y,R17
00065f 930a      	ST   -Y,R16
000660 e0e4      	LDI  R30,LOW(_put_buff_G102)
000661 e0f3      	LDI  R31,HIGH(_put_buff_G102)
000662 93fa      	ST   -Y,R31
000663 93ea      	ST   -Y,R30
000664 01de      	MOVW R26,R28
000665 961a      	ADIW R26,10
000666 ddbd      	RCALL __print_G102
000667 019f      	MOVW R18,R30
000668 81ae      	LDD  R26,Y+6
000669 81bf      	LDD  R27,Y+6+1
00066a e0e0      	LDI  R30,LOW(0)
00066b 93ec      	ST   X,R30
00066c 01f9      	MOVW R30,R18
                 _0x20C0002:
00066d 940e 0ac2 	CALL __LOADLOCR4
00066f 962a      	ADIW R28,10
000670 90ff      	POP  R15
000671 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000672 940e 0aa3 	CALL __PUTPARD2
000674 817b         ldd  r23,y+3
000675 816a         ldd  r22,y+2
000676 81f9         ldd  r31,y+1
000677 81e8         ld   r30,y
000678 fb77         bst  r23,7
000679 0f77         lsl  r23
00067a fd67         sbrc r22,7
00067b 6071         sbr  r23,1
00067c 2f97         mov  r25,r23
00067d 579e         subi r25,0x7e
00067e f081         breq __ftrunc0
00067f f078         brcs __ftrunc0
000680 3198         cpi  r25,24
000681 f490         brsh __ftrunc1
000682 27aa         clr  r26
000683 27bb         clr  r27
000684 2788         clr  r24
                 __ftrunc2:
000685 9408         sec
000686 9587         ror  r24
000687 95b7         ror  r27
000688 95a7         ror  r26
000689 959a         dec  r25
00068a f7d1         brne __ftrunc2
00068b 23ea         and  r30,r26
00068c 23fb         and  r31,r27
00068d 2368         and  r22,r24
00068e c005         rjmp __ftrunc1
                 __ftrunc0:
00068f 94e8         clt
000690 2777         clr  r23
000691 27ee         clr  r30
000692 27ff         clr  r31
000693 2766         clr  r22
                 __ftrunc1:
000694 776f         cbr  r22,0x80
000695 9576         lsr  r23
000696 f408         brcc __ftrunc3
000697 6860         sbr  r22,0x80
                 __ftrunc3:
000698 f977         bld  r23,7
000699 91a9         ld   r26,y+
00069a 91b9         ld   r27,y+
00069b 9189         ld   r24,y+
00069c 9199         ld   r25,y+
00069d 17ea         cp   r30,r26
00069e 07fb         cpc  r31,r27
00069f 0768         cpc  r22,r24
0006a0 0779         cpc  r23,r25
0006a1 fb97         bst  r25,7
0006a2 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0006a3 940e 0aa3 	CALL __PUTPARD2
0006a5 940e 0a8f 	CALL __GETD2S0
0006a7 940e 0672 	CALL _ftrunc
0006a9 940e 06e9 	CALL SUBOPT_0x1
0006ab f419          brne __floor1
                 __floor0:
0006ac 940e 06f1 	CALL SUBOPT_0x3
0006ae c009      	RJMP _0x20C0001
                 __floor1:
0006af f7e6          brtc __floor0
0006b0 940e 06f1 	CALL SUBOPT_0x3
                +
0006b2 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0006b3 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0006b4 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0006b5 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0006b6 940e 090b 	CALL __SUBF12
                 _0x20C0001:
0006b8 9624      	ADIW R28,4
0006b9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0006ba 93ba      	ST   -Y,R27
0006bb 93aa      	ST   -Y,R26
0006bc 91e9          ld   r30,y+
0006bd 91f9          ld   r31,y+
0006be 91a9          ld   r26,y+
0006bf 91b9          ld   r27,y+
0006c0 01cd          movw r24,r26
                 strcpyf0:
0006c1 9005      	lpm  r0,z+
0006c2 920d          st   x+,r0
0006c3 2000          tst  r0
0006c4 f7e1          brne strcpyf0
0006c5 01fc          movw r30,r24
0006c6 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0006c7 93ba      	ST   -Y,R27
0006c8 93aa      	ST   -Y,R26
0006c9 91a9          ld   r26,y+
0006ca 91b9          ld   r27,y+
0006cb 27ee          clr  r30
0006cc 27ff          clr  r31
                 strlen0:
0006cd 916d          ld   r22,x+
0006ce 2366          tst  r22
0006cf f011          breq strlen1
0006d0 9631          adiw r30,1
0006d1 cffb          rjmp strlen0
                 strlen1:
0006d2 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0006d3 93ba      	ST   -Y,R27
0006d4 93aa      	ST   -Y,R26
0006d5 27aa          clr  r26
0006d6 27bb          clr  r27
0006d7 91e9          ld   r30,y+
0006d8 91f9          ld   r31,y+
                 strlenf0:
0006d9 9005      	lpm  r0,z+
0006da 2000          tst  r0
0006db f011          breq strlenf1
0006dc 9611          adiw r26,1
0006dd cffb          rjmp strlenf0
                 strlenf1:
0006de 01fd          movw r30,r26
0006df 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _number:
000260           	.BYTE 0xC
                 _operation:
00026c           	.BYTE 0x2
                 _buffer:
00026e           	.BYTE 0x20
                 __base_y_G100:
00028e           	.BYTE 0x4
                 __seed_G101:
000292           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
                +
0006e0 81ed     +LDD R30 , Y + 5
0006e1 81fe     +LDD R31 , Y + 5 + 1
0006e2 816f     +LDD R22 , Y + 5 + 2
0006e3 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
                +
0006e4 85a9     +LDD R26 , Y + 9
0006e5 85ba     +LDD R27 , Y + 9 + 1
0006e6 858b     +LDD R24 , Y + 9 + 2
0006e7 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0006e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
0006e9 940e 0a94 	CALL __PUTD1S0
0006eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
                +
0006ec 85e9     +LDD R30 , Y + 9
0006ed 85fa     +LDD R31 , Y + 9 + 1
0006ee 856b     +LDD R22 , Y + 9 + 2
0006ef 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0006f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
0006f1 940e 0a8a 	CALL __GETD1S0
0006f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x4:
0006f4 e0e0      	LDI  R30,LOW(0)
0006f5 93e0 0260 	STS  _number,R30
0006f7 93e0 0261 	STS  _number+1,R30
0006f9 93e0 0262 	STS  _number+2,R30
0006fb 93e0 0263 	STS  _number+3,R30
                +
0006fd e6e4     +LDI R30 , LOW ( _number + ( 4 ) )
0006fe e0f2     +LDI R31 , HIGH ( _number + ( 4 ) )
                 	__POINTW1MN _number,4
                +
0006ff e0a0     +LDI R26 , LOW ( 0x3F800000 )
000700 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000701 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000702 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000703 940e 0a99 	CALL __PUTDZ20
                +
000705 e6e8     +LDI R30 , LOW ( _number + ( 8 ) )
000706 e0f2     +LDI R31 , HIGH ( _number + ( 8 ) )
                 	__POINTW1MN _number,8
                +
000707 e0a0     +LDI R26 , LOW ( 0x0 )
000708 e0b0     +LDI R27 , HIGH ( 0x0 )
000709 e080     +LDI R24 , BYTE3 ( 0x0 )
00070a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00070b 940e 0a99 	CALL __PUTDZ20
00070d e2eb      	LDI  R30,LOW(43)
00070e 93e0 026c 	STS  _operation,R30
000710 e2ea      	LDI  R30,LOW(42)
                +
000711 93e0 026d+STS _operation + ( 1 ) , R30
                 	__PUTB1MN _operation,1
000713 2444      	CLR  R4
000714 2455      	CLR  R5
000715 e0e1      	LDI  R30,LOW(1)
000716 e0f0      	LDI  R31,HIGH(1)
000717 013f      	MOVW R6,R30
000718 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000719 e0e1      	LDI  R30,LOW(1)
00071a e0f0      	LDI  R31,HIGH(1)
00071b 15e6      	CP   R30,R6
00071c 05f7      	CPC  R31,R7
00071d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x6:
                +
00071e 91e0 0264+LDS R30 , _number + ( 4 )
000720 91f0 0265+LDS R31 , _number + ( 4 ) + 1
000722 9160 0266+LDS R22 , _number + ( 4 ) + 2
000724 9170 0267+LDS R23 , _number + ( 4 ) + 3
                 	__GETD1MN _number,4
000726 940e 0a9e 	CALL __PUTPARD1
000728 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x7:
                +
000729 91e0 0268+LDS R30 , _number + ( 8 )
00072b 91f0 0269+LDS R31 , _number + ( 8 ) + 1
00072d 9160 026a+LDS R22 , _number + ( 8 ) + 2
00072f 9170 026b+LDS R23 , _number + ( 8 ) + 3
                 	__GETD1MN _number,8
000731 940e 0a9e 	CALL __PUTPARD1
                +
000733 91a0 026d+LDS R26 , _operation + ( 1 )
                 	__GETB2MN _operation,1
000735 940e 007b 	CALL _calculate
                +
000737 93e0 0264+STS _number + ( 4 ) , R30
000739 93f0 0265+STS _number + ( 4 ) + 1 , R31
00073b 9360 0266+STS _number + ( 4 ) + 2 , R22
00073d 9370 0267+STS _number + ( 4 ) + 3 , R23
                 	__PUTD1MN _number,4
                +
00073f e6e8     +LDI R30 , LOW ( _number + ( 8 ) )
000740 e0f2     +LDI R31 , HIGH ( _number + ( 8 ) )
                 	__POINTW1MN _number,8
                +
000741 e0a0     +LDI R26 , LOW ( 0x0 )
000742 e0b0     +LDI R27 , HIGH ( 0x0 )
000743 e080     +LDI R24 , BYTE3 ( 0x0 )
000744 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
000745 940e 0a99 	CALL __PUTDZ20
000747 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x8:
000748 91e0 0260 	LDS  R30,_number
00074a 91f0 0261 	LDS  R31,_number+1
00074c 9160 0262 	LDS  R22,_number+2
00074e 9170 0263 	LDS  R23,_number+3
000750 940e 0a9e 	CALL __PUTPARD1
000752 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x9:
000753 91a0 026c 	LDS  R26,_operation
000755 940e 007b 	CALL _calculate
000757 93e0 0260 	STS  _number,R30
000759 93f0 0261 	STS  _number+1,R31
00075b 9360 0262 	STS  _number+2,R22
00075d 9370 0263 	STS  _number+3,R23
                +
00075f e6e4     +LDI R30 , LOW ( _number + ( 4 ) )
000760 e0f2     +LDI R31 , HIGH ( _number + ( 4 ) )
                 	__POINTW1MN _number,4
000761 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
                +
000762 93e0 0268+STS _number + ( 8 ) , R30
000764 93f0 0269+STS _number + ( 8 ) + 1 , R31
000766 9360 026a+STS _number + ( 8 ) + 2 , R22
000768 9370 026b+STS _number + ( 8 ) + 3 , R23
                 	__PUTD1MN _number,8
00076a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
00076b 940e 0a27 	CALL __CWD1
00076d 940e 08d8 	CALL __CDF1
00076f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000770 9892      	CBI  0x12,2
000771 9893      	CBI  0x12,3
000772 e0a5      	LDI  R26,LOW(5)
000773 e0b0      	LDI  R27,0
000774 940c 0862 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000776 940e 01cd 	CALL __lcd_write_data
000778 e0a3      	LDI  R26,LOW(3)
000779 e0b0      	LDI  R27,0
00077a 940c 0862 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xE:
00077c e3a0      	LDI  R26,LOW(48)
00077d 940e 01b9 	CALL __lcd_write_nibble_G100
                +
00077f ec88     +LDI R24 , LOW ( 200 )
000780 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000781 9701     +SBIW R24 , 1
000782 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000783 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF:
000784 93ba      	ST   -Y,R27
000785 93aa      	ST   -Y,R26
000786 9724      	SBIW R28,4
000787 e0e0      	LDI  R30,LOW(0)
000788 83e8      	ST   Y,R30
000789 83e9      	STD  Y+1,R30
00078a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
00078b 81ee      	LDD  R30,Y+6
00078c 81ff      	LDD  R31,Y+6+1
00078d 93fa      	ST   -Y,R31
00078e 93ea      	ST   -Y,R30
00078f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11:
                +
000790 87e9     +STD Y + 9 , R30
000791 87fa     +STD Y + 9 + 1 , R31
000792 876b     +STD Y + 9 + 2 , R22
000793 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000794 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x12:
000795 81ae      	LDD  R26,Y+6
000796 81bf      	LDD  R27,Y+6+1
000797 9611      	ADIW R26,1
000798 83ae      	STD  Y+6,R26
000799 83bf      	STD  Y+6+1,R27
00079a 9711      	SBIW R26,1
00079b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
                +
00079c 81aa     +LDD R26 , Y + 2
00079d 81bb     +LDD R27 , Y + 2 + 1
00079e 818c     +LDD R24 , Y + 2 + 2
00079f 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0007a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x14:
                +
0007a1 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0007a2 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0007a3 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0007a4 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0007a5 940e 0962 	CALL __MULF12
0007a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
                +
0007a8 83ea     +STD Y + 2 , R30
0007a9 83fb     +STD Y + 2 + 1 , R31
0007aa 836c     +STD Y + 2 + 2 , R22
0007ab 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0007ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x16:
                +
0007ad 81ea     +LDD R30 , Y + 2
0007ae 81fb     +LDD R31 , Y + 2 + 1
0007af 816c     +LDD R22 , Y + 2 + 2
0007b0 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0007b1 85a9     +LDD R26 , Y + 9
0007b2 85ba     +LDD R27 , Y + 9 + 1
0007b3 858b     +LDD R24 , Y + 9 + 2
0007b4 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0007b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x17:
                +
0007b6 e0e0     +LDI R30 , LOW ( 0x41200000 )
0007b7 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0007b8 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0007b9 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0007ba 940e 0962 	CALL __MULF12
0007bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18:
                +
0007bd e0a0     +LDI R26 , LOW ( 0x3F000000 )
0007be e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0007bf e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0007c0 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0007c1 940e 0912 	CALL __ADDF12
0007c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
                +
0007c4 85a9     +LDD R26 , Y + 9
0007c5 85ba     +LDD R27 , Y + 9 + 1
0007c6 858b     +LDD R24 , Y + 9 + 2
0007c7 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0007c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
0007c9 940e 0aa8 	CALL __SWAPD12
0007cb 940e 090b 	CALL __SUBF12
0007cd cfc2      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
0007ce 91ed      	LD   R30,X+
0007cf 91fd      	LD   R31,X+
0007d0 9631      	ADIW R30,1
0007d1 93fe      	ST   -X,R31
0007d2 93ee      	ST   -X,R30
0007d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1C:
                +
0007d4 81ac     +LDD R26 , Y + 4
0007d5 81bd     +LDD R27 , Y + 4 + 1
0007d6 818e     +LDD R24 , Y + 4 + 2
0007d7 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0007d8 cfdd      	RJMP SUBOPT_0x17
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1D:
                +
0007d9 83ec     +STD Y + 4 , R30
0007da 83fd     +STD Y + 4 + 1 , R31
0007db 836e     +STD Y + 4 + 2 , R22
0007dc 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0007dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1E:
                +
0007de 81ec     +LDD R30 , Y + 4
0007df 81fd     +LDD R31 , Y + 4 + 1
0007e0 816e     +LDD R22 , Y + 4 + 2
0007e1 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0007e2 85ac     +LDD R26 , Y + 12
0007e3 85bd     +LDD R27 , Y + 12 + 1
0007e4 858e     +LDD R24 , Y + 12 + 2
0007e5 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0007e6 940e 09f5 	CALL __CMPF12
0007e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
                +
0007e9 85ac     +LDD R26 , Y + 12
0007ea 85bd     +LDD R27 , Y + 12 + 1
0007eb 858e     +LDD R24 , Y + 12 + 2
0007ec 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0007ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20:
                +
0007ee 87ec     +STD Y + 12 , R30
0007ef 87fd     +STD Y + 12 + 1 , R31
0007f0 876e     +STD Y + 12 + 2 , R22
0007f1 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0007f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
0007f3 85a8      	LDD  R26,Y+8
0007f4 85b9      	LDD  R27,Y+8+1
0007f5 9611      	ADIW R26,1
0007f6 87a8      	STD  Y+8,R26
0007f7 87b9      	STD  Y+8+1,R27
0007f8 9711      	SBIW R26,1
0007f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x22:
0007fa 85e8      	LDD  R30,Y+8
0007fb 85f9      	LDD  R31,Y+8+1
0007fc 9631      	ADIW R30,1
0007fd 87e8      	STD  Y+8,R30
0007fe 87f9      	STD  Y+8+1,R31
0007ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x23:
000800 932a      	ST   -Y,R18
000801 81af      	LDD  R26,Y+7
000802 85b8      	LDD  R27,Y+7+1
000803 85e9      	LDD  R30,Y+9
000804 85fa      	LDD  R31,Y+9+1
000805 9509      	ICALL
000806 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x24:
                +
000807 01fe     +MOVW R30 , R28
000808 5ae6     +SUBI R30 , LOW ( - 90 )
000809 4fff     +SBCI R31 , HIGH ( - 90 )
00080a 9001     +LD R0 , Z +
00080b 81f0     +LD R31 , Z
00080c 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00080d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x25:
00080e 9734      	SBIW R30,4
                +
00080f 01de     +MOVW R26 , R28
000810 5aa6     +SUBI R26 , LOW ( - 90 )
000811 4fbf     +SBCI R27 , HIGH ( - 90 )
000812 93ed     +ST X + , R30
000813 93fc     +ST X , R31
                 	__PUTW1SX 90
000814 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x26:
000815 81af      	LDD  R26,Y+7
000816 85b8      	LDD  R27,Y+7+1
000817 85e9      	LDD  R30,Y+9
000818 85fa      	LDD  R31,Y+9+1
000819 9509      	ICALL
00081a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x27:
                +
00081b 01de     +MOVW R26 , R28
00081c 5aa6     +SUBI R26 , LOW ( - 90 )
00081d 4fbf     +SBCI R27 , HIGH ( - 90 )
00081e 900d     +LD R0 , X +
00081f 91bc     +LD R27 , X
000820 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000821 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
                +
000822 87ea     +STD Y + 10 , R30
000823 87fb     +STD Y + 10 + 1 , R31
000824 876c     +STD Y + 10 + 2 , R22
000825 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000826 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x29:
000827 dfdf      	RCALL SUBOPT_0x24
000828 cfe5      	RJMP SUBOPT_0x25
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
                +
000829 85ea     +LDD R30 , Y + 10
00082a 85fb     +LDD R31 , Y + 10 + 1
00082b 856c     +LDD R22 , Y + 10 + 2
00082c 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00082d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2B:
00082e 87ee      	STD  Y+14,R30
00082f 87ff      	STD  Y+14+1,R31
000830 85ae      	LDD  R26,Y+14
000831 85bf      	LDD  R27,Y+14+1
000832 940e 06c7 	CALL _strlen
000834 2f1e      	MOV  R17,R30
000835 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2C:
000836 dfe4      	RCALL SUBOPT_0x27
000837 9614      	ADIW R26,4
000838 940e 0a80 	CALL __GETW1P
00083a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D:
                +
00083b 8be8     +STD Y + 16 , R30
00083c 8bf9     +STD Y + 16 + 1 , R31
00083d 8b6a     +STD Y + 16 + 2 , R22
00083e 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00083f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2E:
000840 7f0b      	ANDI R16,LOW(251)
000841 89ed      	LDD  R30,Y+21
000842 93ea      	ST   -Y,R30
                +
000843 01de     +MOVW R26 , R28
000844 5aa9     +SUBI R26 , LOW ( - 87 )
000845 4fbf     +SBCI R27 , HIGH ( - 87 )
000846 900d     +LD R0 , X +
000847 91bc     +LD R27 , X
000848 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000849 01fe     +MOVW R30 , R28
00084a 5ae7     +SUBI R30 , LOW ( - 89 )
00084b 4fff     +SBCI R31 , HIGH ( - 89 )
00084c 9001     +LD R0 , Z +
00084d 81f0     +LD R31 , Z
00084e 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00084f 9509      	ICALL
000850 3050      	CPI  R21,0
000851 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
                +
000852 89e8     +LDD R30 , Y + 16
000853 89f9     +LDD R31 , Y + 16 + 1
000854 896a     +LDD R22 , Y + 16 + 2
000855 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000856 85aa     +LDD R26 , Y + 10
000857 85bb     +LDD R27 , Y + 10 + 1
000858 858c     +LDD R24 , Y + 10 + 2
000859 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00085a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
00085b 01de      	MOVW R26,R28
00085c 961c      	ADIW R26,12
00085d 940e 0a15 	CALL __ADDW2R15
00085f 940e 0a80 	CALL __GETW1P
000861 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000862 9610      	adiw r26,0
000863 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000864 ed80     +LDI R24 , LOW ( 0x7D0 )
000865 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000866 9701     +SBIW R24 , 1
000867 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000868 95a8      	wdr
000869 9711      	sbiw r26,1
00086a f7c9      	brne __delay_ms0
                 __delay_ms1:
00086b 9508      	ret
                 
                 __ANEGF1:
00086c 9730      	SBIW R30,0
00086d 4060      	SBCI R22,0
00086e 4070      	SBCI R23,0
00086f f009      	BREQ __ANEGF10
000870 5870      	SUBI R23,0x80
                 __ANEGF10:
000871 9508      	RET
                 
                 __ROUND_REPACK:
000872 2355      	TST  R21
000873 f442      	BRPL __REPACK
000874 3850      	CPI  R21,0x80
000875 f411      	BRNE __ROUND_REPACK0
000876 ffe0      	SBRS R30,0
000877 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000878 9631      	ADIW R30,1
000879 1f69      	ADC  R22,R25
00087a 1f79      	ADC  R23,R25
00087b f06b      	BRVS __REPACK1
                 
                 __REPACK:
00087c e850      	LDI  R21,0x80
00087d 2757      	EOR  R21,R23
00087e f411      	BRNE __REPACK0
00087f 935f      	PUSH R21
000880 c0cf      	RJMP __ZERORES
                 __REPACK0:
000881 3f5f      	CPI  R21,0xFF
000882 f031      	BREQ __REPACK1
000883 0f66      	LSL  R22
000884 0c00      	LSL  R0
000885 9557      	ROR  R21
000886 9567      	ROR  R22
000887 2f75      	MOV  R23,R21
000888 9508      	RET
                 __REPACK1:
000889 935f      	PUSH R21
00088a 2000      	TST  R0
00088b f00a      	BRMI __REPACK2
00088c c0cf      	RJMP __MAXRES
                 __REPACK2:
00088d c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00088e e850      	LDI  R21,0x80
00088f 2e19      	MOV  R1,R25
000890 2215      	AND  R1,R21
000891 0f88      	LSL  R24
000892 1f99      	ROL  R25
000893 2795      	EOR  R25,R21
000894 0f55      	LSL  R21
000895 9587      	ROR  R24
                 
                 __UNPACK1:
000896 e850      	LDI  R21,0x80
000897 2e07      	MOV  R0,R23
000898 2205      	AND  R0,R21
000899 0f66      	LSL  R22
00089a 1f77      	ROL  R23
00089b 2775      	EOR  R23,R21
00089c 0f55      	LSL  R21
00089d 9567      	ROR  R22
00089e 9508      	RET
                 
                 __CFD1U:
00089f 9468      	SET
0008a0 c001      	RJMP __CFD1U0
                 __CFD1:
0008a1 94e8      	CLT
                 __CFD1U0:
0008a2 935f      	PUSH R21
0008a3 dff2      	RCALL __UNPACK1
0008a4 3870      	CPI  R23,0x80
0008a5 f018      	BRLO __CFD10
0008a6 3f7f      	CPI  R23,0xFF
0008a7 f408      	BRCC __CFD10
0008a8 c0a7      	RJMP __ZERORES
                 __CFD10:
0008a9 e156      	LDI  R21,22
0008aa 1b57      	SUB  R21,R23
0008ab f4aa      	BRPL __CFD11
0008ac 9551      	NEG  R21
0008ad 3058      	CPI  R21,8
0008ae f40e      	BRTC __CFD19
0008af 3059      	CPI  R21,9
                 __CFD19:
0008b0 f030      	BRLO __CFD17
0008b1 efef      	SER  R30
0008b2 efff      	SER  R31
0008b3 ef6f      	SER  R22
0008b4 e77f      	LDI  R23,0x7F
0008b5 f977      	BLD  R23,7
0008b6 c01a      	RJMP __CFD15
                 __CFD17:
0008b7 2777      	CLR  R23
0008b8 2355      	TST  R21
0008b9 f0b9      	BREQ __CFD15
                 __CFD18:
0008ba 0fee      	LSL  R30
0008bb 1fff      	ROL  R31
0008bc 1f66      	ROL  R22
0008bd 1f77      	ROL  R23
0008be 955a      	DEC  R21
0008bf f7d1      	BRNE __CFD18
0008c0 c010      	RJMP __CFD15
                 __CFD11:
0008c1 2777      	CLR  R23
                 __CFD12:
0008c2 3058      	CPI  R21,8
0008c3 f028      	BRLO __CFD13
0008c4 2fef      	MOV  R30,R31
0008c5 2ff6      	MOV  R31,R22
0008c6 2f67      	MOV  R22,R23
0008c7 5058      	SUBI R21,8
0008c8 cff9      	RJMP __CFD12
                 __CFD13:
0008c9 2355      	TST  R21
0008ca f031      	BREQ __CFD15
                 __CFD14:
0008cb 9576      	LSR  R23
0008cc 9567      	ROR  R22
0008cd 95f7      	ROR  R31
0008ce 95e7      	ROR  R30
0008cf 955a      	DEC  R21
0008d0 f7d1      	BRNE __CFD14
                 __CFD15:
0008d1 2000      	TST  R0
0008d2 f40a      	BRPL __CFD16
0008d3 d145      	RCALL __ANEGD1
                 __CFD16:
0008d4 915f      	POP  R21
0008d5 9508      	RET
                 
                 __CDF1U:
0008d6 9468      	SET
0008d7 c001      	RJMP __CDF1U0
                 __CDF1:
0008d8 94e8      	CLT
                 __CDF1U0:
0008d9 9730      	SBIW R30,0
0008da 4060      	SBCI R22,0
0008db 4070      	SBCI R23,0
0008dc f0b1      	BREQ __CDF10
0008dd 2400      	CLR  R0
0008de f026      	BRTS __CDF11
0008df 2377      	TST  R23
0008e0 f412      	BRPL __CDF11
0008e1 9400      	COM  R0
0008e2 d136      	RCALL __ANEGD1
                 __CDF11:
0008e3 2e17      	MOV  R1,R23
0008e4 e17e      	LDI  R23,30
0008e5 2011      	TST  R1
                 __CDF12:
0008e6 f032      	BRMI __CDF13
0008e7 957a      	DEC  R23
0008e8 0fee      	LSL  R30
0008e9 1fff      	ROL  R31
0008ea 1f66      	ROL  R22
0008eb 1c11      	ROL  R1
0008ec cff9      	RJMP __CDF12
                 __CDF13:
0008ed 2fef      	MOV  R30,R31
0008ee 2ff6      	MOV  R31,R22
0008ef 2d61      	MOV  R22,R1
0008f0 935f      	PUSH R21
0008f1 df8a      	RCALL __REPACK
0008f2 915f      	POP  R21
                 __CDF10:
0008f3 9508      	RET
                 
                 __SWAPACC:
0008f4 934f      	PUSH R20
0008f5 01af      	MOVW R20,R30
0008f6 01fd      	MOVW R30,R26
0008f7 01da      	MOVW R26,R20
0008f8 01ab      	MOVW R20,R22
0008f9 01bc      	MOVW R22,R24
0008fa 01ca      	MOVW R24,R20
0008fb 2d40      	MOV  R20,R0
0008fc 2c01      	MOV  R0,R1
0008fd 2e14      	MOV  R1,R20
0008fe 914f      	POP  R20
0008ff 9508      	RET
                 
                 __UADD12:
000900 0fea      	ADD  R30,R26
000901 1ffb      	ADC  R31,R27
000902 1f68      	ADC  R22,R24
000903 9508      	RET
                 
                 __NEGMAN1:
000904 95e0      	COM  R30
000905 95f0      	COM  R31
000906 9560      	COM  R22
000907 5fef      	SUBI R30,-1
000908 4fff      	SBCI R31,-1
000909 4f6f      	SBCI R22,-1
00090a 9508      	RET
                 
                 __SUBF12:
00090b 935f      	PUSH R21
00090c df81      	RCALL __UNPACK
00090d 3890      	CPI  R25,0x80
00090e f171      	BREQ __ADDF129
00090f e850      	LDI  R21,0x80
000910 2615      	EOR  R1,R21
                 
000911 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000912 935f      	PUSH R21
000913 df7a      	RCALL __UNPACK
000914 3890      	CPI  R25,0x80
000915 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000916 3870      	CPI  R23,0x80
000917 f121      	BREQ __ADDF128
                 __ADDF121:
000918 2f57      	MOV  R21,R23
000919 1b59      	SUB  R21,R25
00091a f12b      	BRVS __ADDF1211
00091b f412      	BRPL __ADDF122
00091c dfd7      	RCALL __SWAPACC
00091d cffa      	RJMP __ADDF121
                 __ADDF122:
00091e 3158      	CPI  R21,24
00091f f018      	BRLO __ADDF123
000920 27aa      	CLR  R26
000921 27bb      	CLR  R27
000922 2788      	CLR  R24
                 __ADDF123:
000923 3058      	CPI  R21,8
000924 f028      	BRLO __ADDF124
000925 2fab      	MOV  R26,R27
000926 2fb8      	MOV  R27,R24
000927 2788      	CLR  R24
000928 5058      	SUBI R21,8
000929 cff9      	RJMP __ADDF123
                 __ADDF124:
00092a 2355      	TST  R21
00092b f029      	BREQ __ADDF126
                 __ADDF125:
00092c 9586      	LSR  R24
00092d 95b7      	ROR  R27
00092e 95a7      	ROR  R26
00092f 955a      	DEC  R21
000930 f7d9      	BRNE __ADDF125
                 __ADDF126:
000931 2d50      	MOV  R21,R0
000932 2551      	EOR  R21,R1
000933 f072      	BRMI __ADDF127
000934 dfcb      	RCALL __UADD12
000935 f438      	BRCC __ADDF129
000936 9567      	ROR  R22
000937 95f7      	ROR  R31
000938 95e7      	ROR  R30
000939 9573      	INC  R23
00093a f413      	BRVC __ADDF129
00093b c020      	RJMP __MAXRES
                 __ADDF128:
00093c dfb7      	RCALL __SWAPACC
                 __ADDF129:
00093d df3e      	RCALL __REPACK
00093e 915f      	POP  R21
00093f 9508      	RET
                 __ADDF1211:
000940 f7d8      	BRCC __ADDF128
000941 cffb      	RJMP __ADDF129
                 __ADDF127:
000942 1bea      	SUB  R30,R26
000943 0bfb      	SBC  R31,R27
000944 0b68      	SBC  R22,R24
000945 f051      	BREQ __ZERORES
000946 f410      	BRCC __ADDF1210
000947 9400      	COM  R0
000948 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000949 2366      	TST  R22
00094a f392      	BRMI __ADDF129
00094b 0fee      	LSL  R30
00094c 1fff      	ROL  R31
00094d 1f66      	ROL  R22
00094e 957a      	DEC  R23
00094f f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000950 27ee      	CLR  R30
000951 27ff      	CLR  R31
000952 2766      	CLR  R22
000953 2777      	CLR  R23
000954 915f      	POP  R21
000955 9508      	RET
                 
                 __MINRES:
000956 efef      	SER  R30
000957 efff      	SER  R31
000958 e76f      	LDI  R22,0x7F
000959 ef7f      	SER  R23
00095a 915f      	POP  R21
00095b 9508      	RET
                 
                 __MAXRES:
00095c efef      	SER  R30
00095d efff      	SER  R31
00095e e76f      	LDI  R22,0x7F
00095f e77f      	LDI  R23,0x7F
000960 915f      	POP  R21
000961 9508      	RET
                 
                 __MULF12:
000962 935f      	PUSH R21
000963 df2a      	RCALL __UNPACK
000964 3870      	CPI  R23,0x80
000965 f351      	BREQ __ZERORES
000966 3890      	CPI  R25,0x80
000967 f341      	BREQ __ZERORES
000968 2401      	EOR  R0,R1
000969 9408      	SEC
00096a 1f79      	ADC  R23,R25
00096b f423      	BRVC __MULF124
00096c f31c      	BRLT __ZERORES
                 __MULF125:
00096d 2000      	TST  R0
00096e f33a      	BRMI __MINRES
00096f cfec      	RJMP __MAXRES
                 __MULF124:
000970 920f      	PUSH R0
000971 931f      	PUSH R17
000972 932f      	PUSH R18
000973 933f      	PUSH R19
000974 934f      	PUSH R20
000975 2711      	CLR  R17
000976 2722      	CLR  R18
000977 2799      	CLR  R25
000978 9f68      	MUL  R22,R24
000979 01a0      	MOVW R20,R0
00097a 9f8f      	MUL  R24,R31
00097b 2d30      	MOV  R19,R0
00097c 0d41      	ADD  R20,R1
00097d 1f59      	ADC  R21,R25
00097e 9f6b      	MUL  R22,R27
00097f 0d30      	ADD  R19,R0
000980 1d41      	ADC  R20,R1
000981 1f59      	ADC  R21,R25
000982 9f8e      	MUL  R24,R30
000983 d027      	RCALL __MULF126
000984 9fbf      	MUL  R27,R31
000985 d025      	RCALL __MULF126
000986 9f6a      	MUL  R22,R26
000987 d023      	RCALL __MULF126
000988 9fbe      	MUL  R27,R30
000989 d01d      	RCALL __MULF127
00098a 9faf      	MUL  R26,R31
00098b d01b      	RCALL __MULF127
00098c 9fae      	MUL  R26,R30
00098d 0d11      	ADD  R17,R1
00098e 1f29      	ADC  R18,R25
00098f 1f39      	ADC  R19,R25
000990 1f49      	ADC  R20,R25
000991 1f59      	ADC  R21,R25
000992 2fe3      	MOV  R30,R19
000993 2ff4      	MOV  R31,R20
000994 2f65      	MOV  R22,R21
000995 2f52      	MOV  R21,R18
000996 914f      	POP  R20
000997 913f      	POP  R19
000998 912f      	POP  R18
000999 911f      	POP  R17
00099a 900f      	POP  R0
00099b 2366      	TST  R22
00099c f02a      	BRMI __MULF122
00099d 0f55      	LSL  R21
00099e 1fee      	ROL  R30
00099f 1fff      	ROL  R31
0009a0 1f66      	ROL  R22
0009a1 c002      	RJMP __MULF123
                 __MULF122:
0009a2 9573      	INC  R23
0009a3 f24b      	BRVS __MULF125
                 __MULF123:
0009a4 decd      	RCALL __ROUND_REPACK
0009a5 915f      	POP  R21
0009a6 9508      	RET
                 
                 __MULF127:
0009a7 0d10      	ADD  R17,R0
0009a8 1d21      	ADC  R18,R1
0009a9 1f39      	ADC  R19,R25
0009aa c002      	RJMP __MULF128
                 __MULF126:
0009ab 0d20      	ADD  R18,R0
0009ac 1d31      	ADC  R19,R1
                 __MULF128:
0009ad 1f49      	ADC  R20,R25
0009ae 1f59      	ADC  R21,R25
0009af 9508      	RET
                 
                 __DIVF21:
0009b0 935f      	PUSH R21
0009b1 dedc      	RCALL __UNPACK
0009b2 3870      	CPI  R23,0x80
0009b3 f421      	BRNE __DIVF210
0009b4 2011      	TST  R1
                 __DIVF211:
0009b5 f40a      	BRPL __DIVF219
0009b6 cf9f      	RJMP __MINRES
                 __DIVF219:
0009b7 cfa4      	RJMP __MAXRES
                 __DIVF210:
0009b8 3890      	CPI  R25,0x80
0009b9 f409      	BRNE __DIVF218
                 __DIVF217:
0009ba cf95      	RJMP __ZERORES
                 __DIVF218:
0009bb 2401      	EOR  R0,R1
0009bc 9408      	SEC
0009bd 0b97      	SBC  R25,R23
0009be f41b      	BRVC __DIVF216
0009bf f3d4      	BRLT __DIVF217
0009c0 2000      	TST  R0
0009c1 cff3      	RJMP __DIVF211
                 __DIVF216:
0009c2 2f79      	MOV  R23,R25
0009c3 931f      	PUSH R17
0009c4 932f      	PUSH R18
0009c5 933f      	PUSH R19
0009c6 934f      	PUSH R20
0009c7 2411      	CLR  R1
0009c8 2711      	CLR  R17
0009c9 2722      	CLR  R18
0009ca 2733      	CLR  R19
0009cb 2744      	CLR  R20
0009cc 2755      	CLR  R21
0009cd e290      	LDI  R25,32
                 __DIVF212:
0009ce 17ae      	CP   R26,R30
0009cf 07bf      	CPC  R27,R31
0009d0 0786      	CPC  R24,R22
0009d1 0741      	CPC  R20,R17
0009d2 f030      	BRLO __DIVF213
0009d3 1bae      	SUB  R26,R30
0009d4 0bbf      	SBC  R27,R31
0009d5 0b86      	SBC  R24,R22
0009d6 0b41      	SBC  R20,R17
0009d7 9408      	SEC
0009d8 c001      	RJMP __DIVF214
                 __DIVF213:
0009d9 9488      	CLC
                 __DIVF214:
0009da 1f55      	ROL  R21
0009db 1f22      	ROL  R18
0009dc 1f33      	ROL  R19
0009dd 1c11      	ROL  R1
0009de 1faa      	ROL  R26
0009df 1fbb      	ROL  R27
0009e0 1f88      	ROL  R24
0009e1 1f44      	ROL  R20
0009e2 959a      	DEC  R25
0009e3 f751      	BRNE __DIVF212
0009e4 01f9      	MOVW R30,R18
0009e5 2d61      	MOV  R22,R1
0009e6 914f      	POP  R20
0009e7 913f      	POP  R19
0009e8 912f      	POP  R18
0009e9 911f      	POP  R17
0009ea 2366      	TST  R22
0009eb f032      	BRMI __DIVF215
0009ec 0f55      	LSL  R21
0009ed 1fee      	ROL  R30
0009ee 1fff      	ROL  R31
0009ef 1f66      	ROL  R22
0009f0 957a      	DEC  R23
0009f1 f243      	BRVS __DIVF217
                 __DIVF215:
0009f2 de7f      	RCALL __ROUND_REPACK
0009f3 915f      	POP  R21
0009f4 9508      	RET
                 
                 __CMPF12:
0009f5 2399      	TST  R25
0009f6 f09a      	BRMI __CMPF120
0009f7 2377      	TST  R23
0009f8 f042      	BRMI __CMPF121
0009f9 1797      	CP   R25,R23
0009fa f048      	BRLO __CMPF122
0009fb f429      	BRNE __CMPF121
0009fc 17ae      	CP   R26,R30
0009fd 07bf      	CPC  R27,R31
0009fe 0786      	CPC  R24,R22
0009ff f020      	BRLO __CMPF122
000a00 f031      	BREQ __CMPF123
                 __CMPF121:
000a01 9498      	CLZ
000a02 9488      	CLC
000a03 9508      	RET
                 __CMPF122:
000a04 9498      	CLZ
000a05 9408      	SEC
000a06 9508      	RET
                 __CMPF123:
000a07 9418      	SEZ
000a08 9488      	CLC
000a09 9508      	RET
                 __CMPF120:
000a0a 2377      	TST  R23
000a0b f7c2      	BRPL __CMPF122
000a0c 1797      	CP   R25,R23
000a0d f398      	BRLO __CMPF121
000a0e f7a9      	BRNE __CMPF122
000a0f 17ea      	CP   R30,R26
000a10 07fb      	CPC  R31,R27
000a11 0768      	CPC  R22,R24
000a12 f388      	BRLO __CMPF122
000a13 f399      	BREQ __CMPF123
000a14 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000a15 2400      	CLR  R0
000a16 0daf      	ADD  R26,R15
000a17 1db0      	ADC  R27,R0
000a18 9508      	RET
                 
                 __ANEGD1:
000a19 95f0      	COM  R31
000a1a 9560      	COM  R22
000a1b 9570      	COM  R23
000a1c 95e1      	NEG  R30
000a1d 4fff      	SBCI R31,-1
000a1e 4f6f      	SBCI R22,-1
000a1f 4f7f      	SBCI R23,-1
000a20 9508      	RET
                 
                 __CBD1:
000a21 2ffe      	MOV  R31,R30
000a22 0fff      	ADD  R31,R31
000a23 0bff      	SBC  R31,R31
000a24 2f6f      	MOV  R22,R31
000a25 2f7f      	MOV  R23,R31
000a26 9508      	RET
                 
                 __CWD1:
000a27 2f6f      	MOV  R22,R31
000a28 0f66      	ADD  R22,R22
000a29 0b66      	SBC  R22,R22
000a2a 2f76      	MOV  R23,R22
000a2b 9508      	RET
                 
                 __DIVB21U:
000a2c 2400      	CLR  R0
000a2d e098      	LDI  R25,8
                 __DIVB21U1:
000a2e 0faa      	LSL  R26
000a2f 1c00      	ROL  R0
000a30 1a0e      	SUB  R0,R30
000a31 f410      	BRCC __DIVB21U2
000a32 0e0e      	ADD  R0,R30
000a33 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000a34 60a1      	SBR  R26,1
                 __DIVB21U3:
000a35 959a      	DEC  R25
000a36 f7b9      	BRNE __DIVB21U1
000a37 2fea      	MOV  R30,R26
000a38 2da0      	MOV  R26,R0
000a39 9508      	RET
                 
                 __DIVB21:
000a3a d039      	RCALL __CHKSIGNB
000a3b dff0      	RCALL __DIVB21U
000a3c f40e      	BRTC __DIVB211
000a3d 95e1      	NEG  R30
                 __DIVB211:
000a3e 9508      	RET
                 
                 __DIVD21U:
000a3f 933f      	PUSH R19
000a40 934f      	PUSH R20
000a41 935f      	PUSH R21
000a42 2400      	CLR  R0
000a43 2411      	CLR  R1
000a44 2744      	CLR  R20
000a45 2755      	CLR  R21
000a46 e230      	LDI  R19,32
                 __DIVD21U1:
000a47 0faa      	LSL  R26
000a48 1fbb      	ROL  R27
000a49 1f88      	ROL  R24
000a4a 1f99      	ROL  R25
000a4b 1c00      	ROL  R0
000a4c 1c11      	ROL  R1
000a4d 1f44      	ROL  R20
000a4e 1f55      	ROL  R21
000a4f 1a0e      	SUB  R0,R30
000a50 0a1f      	SBC  R1,R31
000a51 0b46      	SBC  R20,R22
000a52 0b57      	SBC  R21,R23
000a53 f428      	BRCC __DIVD21U2
000a54 0e0e      	ADD  R0,R30
000a55 1e1f      	ADC  R1,R31
000a56 1f46      	ADC  R20,R22
000a57 1f57      	ADC  R21,R23
000a58 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000a59 60a1      	SBR  R26,1
                 __DIVD21U3:
000a5a 953a      	DEC  R19
000a5b f759      	BRNE __DIVD21U1
000a5c 01fd      	MOVW R30,R26
000a5d 01bc      	MOVW R22,R24
000a5e 01d0      	MOVW R26,R0
000a5f 01ca      	MOVW R24,R20
000a60 915f      	POP  R21
000a61 914f      	POP  R20
000a62 913f      	POP  R19
000a63 9508      	RET
                 
                 __MODB21:
000a64 94e8      	CLT
000a65 ffa7      	SBRS R26,7
000a66 c002      	RJMP __MODB211
000a67 95a1      	NEG  R26
000a68 9468      	SET
                 __MODB211:
000a69 fde7      	SBRC R30,7
000a6a 95e1      	NEG  R30
000a6b dfc0      	RCALL __DIVB21U
000a6c 2fea      	MOV  R30,R26
000a6d f40e      	BRTC __MODB212
000a6e 95e1      	NEG  R30
                 __MODB212:
000a6f 9508      	RET
                 
                 __MODD21U:
000a70 dfce      	RCALL __DIVD21U
000a71 01fd      	MOVW R30,R26
000a72 01bc      	MOVW R22,R24
000a73 9508      	RET
                 
                 __CHKSIGNB:
000a74 94e8      	CLT
000a75 ffe7      	SBRS R30,7
000a76 c002      	RJMP __CHKSB1
000a77 95e1      	NEG  R30
000a78 9468      	SET
                 __CHKSB1:
000a79 ffa7      	SBRS R26,7
000a7a c004      	RJMP __CHKSB2
000a7b 95a1      	NEG  R26
000a7c f800      	BLD  R0,0
000a7d 9403      	INC  R0
000a7e fa00      	BST  R0,0
                 __CHKSB2:
000a7f 9508      	RET
                 
                 __GETW1P:
000a80 91ed      	LD   R30,X+
000a81 91fc      	LD   R31,X
000a82 9711      	SBIW R26,1
000a83 9508      	RET
                 
                 __GETD1P:
000a84 91ed      	LD   R30,X+
000a85 91fd      	LD   R31,X+
000a86 916d      	LD   R22,X+
000a87 917c      	LD   R23,X
000a88 9713      	SBIW R26,3
000a89 9508      	RET
                 
                 __GETD1S0:
000a8a 81e8      	LD   R30,Y
000a8b 81f9      	LDD  R31,Y+1
000a8c 816a      	LDD  R22,Y+2
000a8d 817b      	LDD  R23,Y+3
000a8e 9508      	RET
                 
                 __GETD2S0:
000a8f 81a8      	LD   R26,Y
000a90 81b9      	LDD  R27,Y+1
000a91 818a      	LDD  R24,Y+2
000a92 819b      	LDD  R25,Y+3
000a93 9508      	RET
                 
                 __PUTD1S0:
000a94 83e8      	ST   Y,R30
000a95 83f9      	STD  Y+1,R31
000a96 836a      	STD  Y+2,R22
000a97 837b      	STD  Y+3,R23
000a98 9508      	RET
                 
                 __PUTDZ20:
000a99 83a0      	ST   Z,R26
000a9a 83b1      	STD  Z+1,R27
000a9b 8382      	STD  Z+2,R24
000a9c 8393      	STD  Z+3,R25
000a9d 9508      	RET
                 
                 __PUTPARD1:
000a9e 937a      	ST   -Y,R23
000a9f 936a      	ST   -Y,R22
000aa0 93fa      	ST   -Y,R31
000aa1 93ea      	ST   -Y,R30
000aa2 9508      	RET
                 
                 __PUTPARD2:
000aa3 939a      	ST   -Y,R25
000aa4 938a      	ST   -Y,R24
000aa5 93ba      	ST   -Y,R27
000aa6 93aa      	ST   -Y,R26
000aa7 9508      	RET
                 
                 __SWAPD12:
000aa8 2e18      	MOV  R1,R24
000aa9 2f86      	MOV  R24,R22
000aaa 2d61      	MOV  R22,R1
000aab 2e19      	MOV  R1,R25
000aac 2f97      	MOV  R25,R23
000aad 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000aae 2e1b      	MOV  R1,R27
000aaf 2fbf      	MOV  R27,R31
000ab0 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000ab1 2e1a      	MOV  R1,R26
000ab2 2fae      	MOV  R26,R30
000ab3 2de1      	MOV  R30,R1
000ab4 9508      	RET
                 
                 __CPD10:
000ab5 9730      	SBIW R30,0
000ab6 4060      	SBCI R22,0
000ab7 4070      	SBCI R23,0
000ab8 9508      	RET
                 
                 __SAVELOCR6:
000ab9 935a      	ST   -Y,R21
                 __SAVELOCR5:
000aba 934a      	ST   -Y,R20
                 __SAVELOCR4:
000abb 933a      	ST   -Y,R19
                 __SAVELOCR3:
000abc 932a      	ST   -Y,R18
                 __SAVELOCR2:
000abd 931a      	ST   -Y,R17
000abe 930a      	ST   -Y,R16
000abf 9508      	RET
                 
                 __LOADLOCR6:
000ac0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000ac1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000ac2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000ac3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000ac4 8119      	LDD  R17,Y+1
000ac5 8108      	LD   R16,Y
000ac6 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   5 r5 :   4 r6 :   3 r7 :   2 
r8 :   4 r9 :   4 r10:   0 r11:   2 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  54 r17:  95 r18:  48 r19:  36 r20:  50 r21:  90 r22: 111 r23:  97 
r24:  82 r25:  71 r26: 232 r27: 106 r28:  31 r29:   1 r30: 406 r31: 162 
x  :  42 y  : 375 z  :  28 
Registers used: 29 out of 35 (82.9%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  32 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  53 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  72 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 252 
cbi   :  15 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  53 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  17 cpc   :  25 cpi   :  95 cpse  :   0 dec   :  15 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   2 inc   :   5 jmp   :  25 ld    :  51 ldd   : 204 ldi   : 262 
lds   :  22 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  91 movw  :  50 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :   9 out   :  11 pop   :  22 push  :  22 rcall :  51 ret   : 100 
reti  :   0 rjmp  : 170 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :   9 sbic  :   4 sbis  :  12 sbiw  :  31 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  98 std   :  81 sts   :  23 sub   :   6 subi  :  51 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 81 out of 116 (69.8%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00158e   5446     72   5518   32768  16.8%
[.dseg] 0x000060 0x000296      0     54     54    2048   2.6%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 11 warnings
